{
	"managerAnalytis": {
		"408": "ليس لديك امتياز للوصول الى لوحة تحكم التحليلات"
	},
	"common": {
		"fields": {
			"authorization": "الرمز المميز للمصادقة للمستخدم.",
			"language": "حدد اللغة (en-الانجليزية, sn-الاسبانية , etc.).",
			"platform": "حدد اللوحة (1-IOS, 2-Android, 3-web).",
			"currencysymbol": "حدد رمز العملة (₹, $, etc.).",
			"currencycode": "حدد رمز العملة  (روبية, دولار , الخ.)."
		},
		"response": {
			"200": "نجاح",
			"400": "%s الملف مفقود/غير صالح ",
			"401": "دخول غير مرخص , يرجى تسجيل الدخول.",
			"404": "لم يتم العثور على المعلومات",
			"406": "انتهت صلاحية الرمز المميز.",
			"500": "خطأ في الخادم الداخلي "
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"400": "طلب غير صحيح اثناء فقدان بعض البيانات او عدم صلاحيتها .",
			"401": "سيحدث هذا أثناء انتهاء صلاحية رمز التحديث أو إدراجه في القائمة السوداء.",
			"404": "لم يتم العثور على المعلومات",
			"406": "سيحدث هذا أثناء انتهاء صلاحية رمز المصادقة.",
			"409": "سيحدث هذا أثناء وجود البيانات المطلوبة بالفعل.",
			"410": "سيحدث هذا عند إزالة المورد المطلوب نهائيا.",
			"412": "سيحدث هذا عند العثور على عنوان بريد إلكتروني مكرر.",
			"413": "سيحدث هذا عند العثور على رقم هاتف مكرر.",
			"500": "يحدث هذا الخطأ اثناء حدوث خطأ داخلي  ."
		},
		"responseexample": {
			"200": "نجاح.",
			"400": "%s الحقل مفقود/غير صالح ",
			"498": "انتهت صلاحية الرمز المميز .",
			"500": "خطأ في الخادم الداخلي ."
		},
		"responsedescription": {
			"200": "نجاح.",
			"400": "طلب غير صحيح اثناء فقدان بعض البيانات او عدم صلاحيتها  .",
			"498": "انتهت صلاحية الرمز المميز .",
			"500": "خطأ الخادم الداخلي 500 هو خطأ من جانب الخادم ، مما يعني أن المشكلة ليست في جهاز الكمبيوتر أو اتصال الإنترنت ولكن بدلا من ذلك هي مشكلة في خادم موقع الويب."
		}
	},
	"getStoreCategory": {
		"description": "احصل على فئة المتجر حسب المدينة.",
		"notes": "يتم استخدام واجهة برمجة التطبيقات هذه للحصول على جميع فئات المتاجر حسب المدينة.",
		"fields": {
			"cityId": "معرف المدينة ."
		},
		"response": {
			"200": "نجاح",
			"404": "لم يتم العثور على فئة المتجر."
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"404": "يحدث هذا الخطأ عند عدم العثور على فئة مخزن في قاعدة البيانات."
		},
		"responseFields": {
			"id": "معرف الفئة.",
			"name": "اسم الفئة.",
			"colorCode": "تعيين رمز اللون للفئة.",
			"storeType": "معرف نوع المتجر للفئة.",
			"storeTypeText": "نوع المتجر من الفئة.",
			"count": "يتم احتساب الطلبات النشطة في الفئة."
		}
	},
	"getPrescriptions": {
		"description": "تجاوز الوصفة الطبية المقبولة.",
		"notes": "يتم استخدام واجهة برمجة التطبيقات هذه للحصول على جميع الوصفات الطبية المقبولة السابقة.",
		"fields": {
			"storeType": "نوع المتجر.",
			"limit": "حجم الصفحة.",
			"skip": "سجل للتخطي ."
		},
		"response": {
			"200": "نجاح",
			"404": "لم يتم العثور على وصفة طبية."
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"404": "يحدث هذا الخطأ عندما لا يتم العثور على وصفة طبية في قاعدة البيانات."
		},
		"responseFields": {
			"count": "عد جميع الوصفات الطبية",
			"_id": "معرف الوصفة الطبية .",
			"url": "عنوان URL للوصفة الطبية التي تم تحميلها واستخدامها في الماضي.",
			"usedOn": "يستخدم وقت الوصفة الطبية في الماضي .",
			"masterOrderId": "تم استخدام معرف الطلب في الوصفات الطبية "
		}
	},
	"dmsPackagesGet": {
		"description": "الحصول على الحزم عن طريق معرف الطلب الاصل.",
		"notes": "يتم استخدام واجهة برمجة التطبيقات هذه للحصول على جميع الحزم من معرف الطلب الأصلي.",
		"fields": {
			"parentOrderId": "معرف طلب الوالدين للحصول على تفاصيل على سبيل المثال: 44301580712142350.",
			"packageIds": "معرفات الحزمة ذات الترتيب المتعدد في سلسلة مع مقياس الضبط ',' على سبيل المثال: 44301580712142350,44301580712142350."
		},
		"response": {
			"200": "نجاح",
			"404": "الحزمة غير موجودة."
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"404": "يحدث هذا الخطأ عند عدم العثور على الحزمة في قاعدة البيانات."
		},
		"responseFields": {}
	},
	"dmsPackageDetails": {
		"description": "احصل على تفاصيل العبوة.",
		"notes": "يتم استخدام واجهة برمجة التطبيقات هذه للحصول على تفاصيل الحزمة من معرف الحزمة.",
		"fields": {
			"packageId": "معرف الحزمة للحصول على تفاصيل على سبيل المثال: 44301580712142350.",
			"productOrderId": "معرف طلب المنتج للحصول على تفاصيل على سبيل المثال: 44301580712142350."
		},
		"response": {
			"200": "نجاح",
			"404": "الحزمة غير موجودة."
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"404": "يحدث هذا الخطأ عند عدم العثور على الحزمة في قاعدة البيانات."
		},
		"responseFields": {}
	},
	"dmsPackageDeliveryStatus": {
		"description": "الحصول على تفاصيل الحزمة حالة التسليم.",
		"notes": "يتم استخدام واجهة برمجة التطبيقات هذه للحصول على تفاصيل حالة التسليم من معرف الحزمة.",
		"fields": {
			"packageId": "معرف الحزمة للحصول على تفاصيل على سبيل المثال: 44301580712142350.",
			"productOrderId": "معرف طلب المنتج للحصول على تفاصيل على سبيل المثال: 44301580712142350."
		},
		"response": {
			"200": "نجاح",
			"404": "الحزمة غير موجودة."
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"404": "يحدث هذا الخطأ عند عدم العثور على الحزمة في قاعدة البيانات."
		},
		"responseFields": {
			"status": "الوضع في العدد .",
			"statusText": "رسالة الحالة في سلسلة.",
			"time": "الطابع الزمني لتحديث الحالة.",
			"formatedDate": "التاريخ المنسق لتحديث الحالة.",
			"otherDetails": "تفاصيل أخرى للحالة كما هو الحال في معرف تتبع التسليم."
		}
	},
	"ipinfo": {
		"404": "wrong ip address please check your ip address",
		"429": "انتهت صلاحية حد السعر الخاص بك تحقق من حساب معلومات IP الخاص بك لاستكشاف الأخطاء وإصلاحها"
	},
	"dispatchPost": {
		"403": "الحالة غير صحيحة.",
		"404": "المعلومات غير موجودة.",
		"405": "لا يمكن إكمال الطلب ، الطلب مع تدفق المسار."
	},
	"orderPatch": {
		"403": "الحالة غير صالحة ، يرجى التحقق من تفاصيل الطلب.",
		"404": "المعلومات غير موجودة.",
		"409": "تم تحديث الحالة بالفعل."
	},
	"dc": {
		"404": "لم يتم العثور على أي مركز توزيع لهذا البلد أو المدينة"
	},
	"adminPostBanCustomer": {
		"402": "هذا العميل لديه حجز مستمر لذلك لا يمكنك حظره",
		"404": "لم يتم العثور على ملف تعريف العميل"
	},
	"admin": {
		"401": "أنت ترغب في الوصول إلى هذا المسار باستخدام رمز مصادقة غير صالح",
		"404": "لم يتم العثور على المستخدم المسؤول مع هذا البريد الإلكتروني.",
		"405": "يبدو أنك أدخلت كلمة مرور خاطئة لهذا البريد الإلكتروني.",
		"408c": "كلمة المرور الحالية غير متطابقة، حاول مرة أخرى.."
	},
	"providerPlatNumberValidate": {
		"412": "رقم اللوحة هذا مسجل لدينا بالفعل"
	},
	"googleSignin": {
		"404": "حساب جوجل هذا غير مرتبط بأي مستخدم حالي ، يرجى التسجيل كمستخدم جديد لمواصلة استخدام التطبيق"
	},
	"appleSignin": {
		"404": "حساب أبل هذا غير مرتبط بأي مستخدم حالي ، يرجى التسجيل كمستخدم جديد لمواصلة استخدام التطبيق"
	},
	"facebookSignin": {
		"404": "حساب الفيسبوك هذا غير مرتبط بأي مستخدم حالي ، يرجى التسجيل كمستخدم جديد لمواصلة استخدام التطبيق"
	},
	"manager": {
		"200": "اوك",
		"402": "رقم الهاتف ورمز البلد مطلوب",
		"404": "لم يتم العثور على المدير",
		"408": "يبدو أنك أدخلت كلمة مرور خاطئة",
		"412": "المدير موجود بالفعل بنفس معرف البريد الإلكتروني",
		"413": "مدير موجود بالفعل مع نفس الهاتف المحمول",
		"408c": "كلمة المرور الحالية غير متطابقة، حاول مرة أخرى.."
	},
	"genericErrMsg": {
		"200": "نجاح.",
		"400": "الحقول الإلزامية مفقودة.",
		"401": "لم يتم التحقق من ملفك الشخصي ، يرجى الاتصال بالدعم الخاص بنا لمزيد من الاستفسارات.",
		"402": "الحقول الإلزامية مفقودة.",
		"404": "حدث خطأ ما.يرجى تسجيل الخروج والمحاولة مرة أخرى.",
		"440": "انتهت صلاحية الرمز المميز .",
		"498": "الرمز المميز غير صالح .",
		"500": "خطأ في الخادم الداخلي .",
		"501": "خطأ التنفيذ.",
		"500d": "خطأ الخادم الداخلي 500 هو خطأ من جانب الخادم ، مما يعني أن المشكلة ليست في جهاز الكمبيوتر أو اتصال الإنترنت ولكن بدلا من ذلك هي مشكلة في خادم موقع الويب.",
		"401d": "الخطأ غير المصرح به 401 هو رمز حالة استجابة HTTP يشير إلى تعذر مصادقة الطلب المرسل من قبل العميل. ... على العكس من ذلك ، يشير خطأ 401 غير المصرح به إلى أن المورد المطلوب مقيد ويتطلب المصادقة ، لكن العميل فشل في توفير أي مصادقة من هذا القبيل",
		"400d": "يشير رمز حالة استجابة الطلب السيئ 400 إلى أن الخادم لا يمكنه أو لن يعالج الطلب بسبب شيء ينظر إليه على أنه خطأ عميل أو شيء مفقود في الحمولة"
	},
	"SMS": {
		"200": "رمز التحقق ٪s الخاص بك هو ٪s"
	},
	"driverStatus": {
		"statusText": "لقد تم تسجيل خروجك من قبل فريق العمليات لدينا ، يرجى تسجيل الدخول مرة أخرى لمواصلة الوصول إلى حسابك.",
		"statusTitle": "تسجيل الخروج",
		"offlineText": "تم تحويل حالة التوفر الخاصة بك إلى وضع عدم الاتصال من قبل فريق العمليات لدينا",
		"offlineTitle": "غير متصل من قبل فريق العمليات",
		"sessionmsg": "انتهت صلاحية جلستك ، يرجى تسجيل الدخول مرة أخرى لمتابعة الوصول إلى حسابك.",
		"sessiontitle": "انتهت صلاحية الجلسة"
	},
	"walletSoftLimit": {
		"33": "انت خارج الحدود المرنة"
	},
	"estimateDelivery": {
		"402": "عدم تطابق المنطقة",
		"403": "عدم تطابق المدينة ، لا يمكن التوصيل إلى مدينة مختلفة."
	},
	"stripeCardPost": {
		"200": "تمت إضافة البطاقة بنجاح."
	},
	"stripeCardPatch": {
		"200": "تمت إضافة البطاقة بنجاح إلى المصدر الافتراضي.",
		"400": "لم يتم العثور على البطاقة أو المستخدم."
	},
	"stripeCardDelete": {
		"200": "تم حذف البطاقة بنجاح.",
		"400": "لم يتم العثور على البطاقة أو المستخدم."
	},
	"stripeConnectAccountGet": {
		"400": "لا يوجد حساب شريط ، يرجى إنشاء حساب شريط جديد."
	},
	"stripeConnectAccountPost": {
		"400": "لا يوجد حساب شريط ، يرجى إنشاء حساب شريط جديد."
	},
	"stripeExternalAccountPost": {
		"400": "لا يوجد حساب شريط ، يرجى إنشاء حساب شريط جديد."
	},
	"stripeExternalAccountDelete": {
		"200": "تم حذف الحساب الخارجي بنجاح.",
		"400": "لم يتم العثور على حساب خارجي أو حساب كونري."
	},
	"stripeExternalAccountPatch": {
		"200": "تمت إضافة الحساب الخارجي بنجاح إلى المصدر الافتراضي.",
		"400": "لم يتم العثور على حساب خارجي أو حساب كونري."
	},
	"stripePlanPost": {
		"200": "تمت إضافة الخطة بنجاح."
	},
	"stripePlanPatch": {
		"200": "تم تحديث الخطة بنجاح.",
		"400": "لم يتم العثور على الخطة."
	},
	"stripePlanDelete": {
		"200": "تم حذف الخطة بنجاح.",
		"400": "لم يتم العثور على الخطة."
	},
	"stripeSubscribePost": {
		"200": "تمت إضافة الاشتراك بنجاح.",
		"208": "مشترك بالفعل في نفس الخطة.",
		"400": "الزبون غير موجود.",
		"401": "لم يتم العثور على البطاقات",
		"402": "لم يتم العثور على الخطة."
	},
	"stripeSubscribeGet": {
		"200": "نجاح.",
		"400": "الزبون غير موجود.",
		"401": "الاشتراك غير موجود."
	},
	"stripeSubscribePatch": {
		"200": "تم تحديث الاشتراك بنجاح.",
		"400": "الزبون غير موجود.",
		"401": "لم يتم العثور على البطاقات",
		"402": "لم يتم العثور على الخطة."
	},
	"stripeSubscribeDelete": {
		"200": "تم حذف الاشتراك بنجاح.",
		"400": "الاشتراك غير موجود.",
		"401": "الزبون غير موجود."
	},
	"stripeTransaction": {
		"customeNotFound": "الزبون غير موجود.",
		"authoriseSuccess": "تم إنشاء الشحن بنجاح.",
		"refundChargeSuccess": "إلغاء الشحن بنجاح.",
		"captureChargeSuccess": "تم التقاط الشحن بنجاح.",
		"chargeSuccess": "نجاح الشحن.",
		"accountNotFound": "لم يتم العثور على الحساب.",
		"transferSuccess": "نجاح التحويل."
	},
	"stripeErr": {
		"rateLimit": "Too many requests made to the API.",
		"غير صالح Params": "تم توقير معلمات غير صالحة.",
		"apiErr": "An error occurred internally with Stripe's API.",
		"connectionErr": "حدث نوع من الخطأ أثناء اتصال HTTPS.",
		"authErr": "You probably used an incorrect API key.",
		"defaultErr": "خطأ غير متوقع."
	},
	"postSignUp": {
		"200": "نجاح.",
		"400": "المستخدم غير متوفر",
		"412": "عنوان البريد الإلكتروني هذا مسجل لدينا بالفعل ، يرجى تجربة عنوان بريد إلكتروني مختلف.",
		"413": "رقم الهاتف هذا مسجل لدينا بالفعل ، يرجى تجربة رقم مختلف.",
		"414": "كلمة المرور مطلوبة"
	},
	"getProfile": {
		"200": "نجاح.",
		"204": "لم يتم العثور على المستخدم",
		"404": "لم يتم العثور على المعلومات",
		"409": "الملف الشخصي للمستخدم ليس ملفا شخصيا للمؤسسة"
	},
	"updateProfile": {
		"200": "تم تحديث الملف الشخصي بنجاح.",
		"204": "لم يتم العثور على المستخدم",
		"404": "لم يتم العثور على المعلومات"
	},
	"getData": {
		"200": "نجاح.",
		"404": "لم يتم العثور على المعلومات"
	},
	"appVersions": {
		"200": "نجاح.",
		"400": "يرجى تحديث تطبيقك إلى أحدث إصدار متوفر.",
		"404": "لم يتم العثور على المعلومات"
	},
	"guestRegisterUser": {
		"200": "نجاح.",
		"400": "طلب غير ناجح. "
	},
	"getCityErrMsg": {
		"200": "نجاح.",
		"404": "لم يتم العثور على مدينة"
	},
	"emails": {
		"200": "تم إرسال البريد الإلكتروني بنجاح.",
		"400": "لم يتم العثور على مستخدم"
	},
	"postPhoneValidation": {
		"200": "نجاح.",
		"400": "طلب غير ناجح",
		"402": "رقم الهاتف ورمز البلد مطلوبان",
		"404": "غير موجود",
		"406": "رقم الهاتف غير صالح",
		"408": "حقل البريد الإلكتروني مطلوب",
		"412": "رقم الهاتف هذا مرتبط بحساب مستخدم ، يرجى تجربة رقم هاتف مختلف.",
		"413": "عنوان البريد الإلكتروني هذا مرتبط بحساب مستخدم ، يرجى تجربة عنوان بريد إلكتروني مختلف.",
		"412a": "رقم الهاتف هذا مرتبط بحساب مستخدم ، يرجى تجربة رقم هاتف مختلف.",
		"413a": "عنوان البريد الإلكتروني هذا مرتبط بحساب مستخدم ، يرجى تجربة عنوان بريد إلكتروني مختلف."
	},
	"postUserNameValidation": {
		"200": "نجاح.",
		"400": "طلب غير ناجح",
		"402": "حقل اسم المستخدم مطلوب",
		"404": "غير موجود",
		"406": "اسم المستخدم غير صالح",
		"412": "اسم المستخدم هذا مرتبط بالفعل بحساب مستخدم آخر ، يرجى المحاولة مرة أخرى باستخدام اسم مستخدم مختلف"
	},
	"managerPhoneValidation": {
		"200": "نجاح.",
		"400": "طلب غير ناجح",
		"402": "حقل رقم الهاتف ورمز البلد مطلوب",
		"404": "غير موجود",
		"406": "رقم الهاتف غير صالح",
		"408": "البريد الإلكتروني مطلوب",
		"412": "رقم الهاتف هذا مرتبط بالفعل بحساب مستخدم آخر ، يرجى المحاولة مرة أخرى باستخدام رقم هاتف مختلف",
		"413": "عنوان البريد الإلكتروني هذا مرتبط بالفعل بحساب مستخدم آخر ، يرجى المحاولة مرة أخرى باستخدام عنوان بريد إلكتروني مختلف",
		"412a": "رقم الهاتف مرتبط بالفعل بملف تعريف آخر ، حاول مرة أخرى باستخدام رقم هاتف مختلف أو جرب خيار نسيت كلمة المرور",
		"413a": "البريد الإلكتروني مرتبط بالفعل بملف تعريف آخر ، حاول مرة أخرى باستخدام بريد إلكتروني مختلف أو جرب خيار نسيت كلمة المرور"
	},
	"postEmailValidation": {
		"200": "نجاح.",
		"412": "عنوان البريد الإلكتروني هذا مسجل بالفعل معنا ، يرجى تجربة عنوان آخر."
	},
	"getServiceCategory": {
		"200": "حصلت على تفاصيل الفئة.",
		"404": "لم يتم العثور على فئة"
	},
	"postVerifyPhoneNumber": {
		"200": "شكرا لتسجيلك. سيتواصل معك أحد ممثلينا خلال ال 24 ساعة القادمة لإعداد ملف التعريف الخاص بك والحصول على جميع المستندات اللازمة.",
		"410": "رمز التحقق غير صالح، يرجى المحاولة مرة أخرى"
	},
	"postSignIn": {
		"200": "تم تسجيل الدخول بنجاح.",
		"399": "رقم الهاتف هذا غير مسجل لدينا، يرجى التسجيل كسائق جديد أو المحاولة مرة أخرى باستخدام رقم هاتف مختلف.",
		"400": "هذا البريد الإلكتروني غير مسجل لدينا ، يرجى التسجيل كسائق جديد أو المحاولة مرة أخرى باستخدام عنوان بريد إلكتروني مختلف.",
		"403": "تم رفض ملفك الشخصي من قبل فريق العمليات لدينا. يرجى التواصل مع فريق الدعم لدينا لمزيد من المعلومات.",
		"404": "لم يتم العثور على بيانات السائق.",
		"405": "ملفك الشخصي حاليا في انتظار المراجعة ، يمكنك التواصل مع فريق الدعم لدينا لأية استفسارات أخرى",
		"406": "تم تعليق ملفك الشخصي من قبل المسؤول. يرجى الاتصال بنا على ٪s",
		"408": "لم يتم العثور على بيانات المركبة.",
		"409": "كلمة المرور غير صحيحة، يرجى المحاولة مرة أخرى.",
		"410": "البريد الإلكتروني مطلوب",
		"411": "رقم الهاتف مطلوب",
		"412": "رمز البلد مطلوب"
	},
	"newAccount": {
		"406": "شكرا لتسجيلك. سيتواصل معك أحد ممثلينا خلال ال 24 ساعة القادمة لإعداد ملف التعريف الخاص بك والحصول على جميع المستندات اللازمة."
	},
	"bannedAccount": {
		"406": "تم حظر ملفك الشخصي من قبل فريق العمليات لدينا. يرجى التواصل مع فريق الدعم لدينا لمزيد من المعلومات."
	},
	"deactivatedAccount": {
		"406": "تم إلغاء تنشيط حسابك. يرجى الكتابة إلينا على support@loopz.today لمزيد من التفاصيل."
	},
	"rejectedAccount": {
		"406": "تم رفض ملفك الشخصي من قبل فريق العمليات لدينا. يرجى التواصل مع فريق الدعم لدينا لمزيد من المعلومات."
	},
	"patchProfile": {
		"200": "تم التحديث بنجاح.",
		"400": "يرجى التحقق من حقل الإدخال",
		"412": "لا يمكنك حذف أو حظر السائق إذا كان السائق قيد الحجز حاليا"
	},
	"patchStatus": {
		"200": "تم التحديث بنجاح."
	},
	"patchLocation": {
		"200": "تم التحديث بنجاح.."
	},
	"patchPassword": {
		"200": "تم التحديث بنجاح..",
		"401": "كلمة المرور غير صحيحة."
	},
	"postResendOtp": {
		"200": "تم إرسال رمز التحقق إلى رقم هاتفك المحمول المسجل",
		"404": "المعلومات غير موجودة.",
		"429": "لقد استنفدت الحصة المحددة لمحاولات التحقق , حاول مرة اخرى بعد 24 ساعة"
	},
	"slaveRegisterUser": {
		"200": "نجاح",
		"400": "طلب غير ناجح"
	},
	"slaveVerifyPhoneNumber": {
		"200": "تم التحقق من رقم الهاتف",
		"400": "رمز التحقق خاطئ.",
		"401": "تم التحقق من رقم الهاتف المحمول هذا بالفعل ، يرجى تجربة رقم آخر.",
		"404": "المعلومات غير موجودة.",
		"410": "انتهت صلاحية رمز التحقق ، يرجى إنشاء رمز جديد بالنقر فوق زر إعادة الإرسال.",
		"429": "لقد استنفدت الحصة المحددة لمحاولات التحقق , حاول مرة اخرى بعد 24 ساعة"
	},
	"slaveResendOtp": {
		"200": "تم إرسال رمز التحقق إلى رقم هاتفك المحمول المسجل",
		"404": "المعلومات غير موجودة.",
		"429": "لقد استنفدت الحصة المحددة لمحاولات التحقق , حاول مرة اخرى بعد 24 ساعة"
	},
	"slaveEmailValidation": {
		"200": "نجاح.",
		"412": "عنوان البريد الإلكتروني هذا مسجل بالفعل معنا ، يرجى تجربة عنوان آخر.",
		"413": "عنوان البريد الإلكتروني هذا مسجل لدينا بالفعل ، يرجى تجربة عنوان بريد إلكتروني مختلف."
	},
	"slavePhoneValidation": {
		"200": "نجاح.",
		"400": "طلب غير ناجح",
		"406": "رقم الهاتف غير صالح",
		"412": "رقم الهاتف هذا مسجل لدينا بالفعل ، يرجى تجربة رقم مختلف."
	},
	"slavePassword": {
		"200": "تم التحديث بنجاح..",
		"401": "كلمة المرور خاطئة! حاول مرة أخرى أو انقر فوق نسيت كلمة المرور لإعادة تعيينها."
	},
	"customerUpdatePassword": {
		"200": "تم التحديث بنجاح..",
		"401": "لم يتم التحقق من الرمز.",
		"402": "أنت غير مصرح لك بتغيير كلمة المرور.",
		"440": "رمز التحقق غير صالح، يرجى المحاولة مرة أخرى"
	},
	"driverUpdatePassword": {
		"200": "تم التحديث بنجاح..",
		"401": "لم يتم التحقق من الرمز.",
		"402": "أنت غير مصرح لك بتغيير كلمة المرور.",
		"440": "رمز التحقق غير صالح، يرجى المحاولة مرة أخرى"
	},
	"slaveProfile": {
		"200": "نجاح.",
		"404": "غير موجود"
	},
	"slaveUpdateProfile": {
		"200": "تم التحديث بنجاح..",
		"400": "طلب غير ناجح"
	},
	"slaveGetService": {
		"200": "تم التحديث بنجاح..",
		"400": "طلب غير ناجح"
	},
	"slaveSignIn": {
		"200": "تم تسجيل الدخول بنجاح ..",
		"400": "طلب غير ناجح.",
		"402": "لم يتم التحقق من الهاتف",
		"403": "لم تتم الموافقة على ملف تعريف هذا المستخدم بعد ، يرجى الاتصال بخدمة العملاء لمزيد من الاستفسارات",
		"404": "هذا الرقم / البريد الإلكتروني غير مسجل لدينا ، يرجى التسجيل كمستخدم جديد أو المحاولة باستخدام رقم / بريد إلكتروني أو كلمة مرور مختلفة",
		"405": "تم حذف حسابك ",
		"406": "معرف البريد الإلكتروني / رقم الهاتف غير صحيح.",
		"407": "تم حظر ملفك الشخصي من قبل فريق العمليات لدينا. يرجى التواصل مع فريق الدعم لدينا لمزيد من المعلومات.",
		"408": "كلمة المرور التي تم إدخالها لا تتطابق مع عنوان البريد الإلكتروني الذي تم إدخاله أعلاه ، جرب نسيت كلمة المرور لإعادة تعيين كلمة المرور الخاصة بك أو التسجيل كمستخدم جديد ",
		"409": "يبدو أنك أدخلت كلمة مرور جديدة مثل كلمة المرور القديمة ، يرجى المحاولة مرة أخرى باستخدام كلمة مرور جديدة أو استخدام خيار نسيت كلمة المرور لاستعادة كلمة المرور الخاصة بك",
		"411": "كلمة المرور التي تم إدخالها لا تتطابق مع كلمة المرور القديمة ، يرجى المحاولة مرة أخرى أو استخدام خيار نسيت كلمة المرور لاستعادة كلمة المرور الخاصة بك",
		"415": "تم تعليق ملف تعريف المستخدم هذا من قبل مسؤول الحساب ، يرجى الاتصال بخدمة العملاء لدينا لمزيد من الاستفسارات",
		"416": "تم حذف ملف التعريف الخاص بك من قبل فريق العمليات لدينا. يرجى التواصل مع فريق الدعم لدينا لمزيد من المعلومات.",
		"417": "تم رفض ملف تعريف هذا المستخدم ، يرجى الاتصال بخدمة العملاء لمزيد من الاستفسارات",
		"418": "لم تتم الموافقة على ملف تعريف هذا المستخدم بعد ، يرجى الاتصال بخدمة العملاء لمزيد من الاستفسارات."
	},
	"storeManagerSignIn": {
		"200": "نجاح",
		"400": "طلب غير ناجح.",
		"401": "كلمة المرور غير صحيحة، يرجى المحاولة مرة أخرى.",
		"402": "لم يتم التحقق من الهاتف",
		"403": "تم إلغاء تنشيط حسابك. يرجى الكتابة إلينا على support@loopz.today لمزيد من التفاصيل.",
		"404": "لم يتم العثور على المستخدم",
		"405": "لم يتم تفعيل حسابك ، يرجى تنشيط حسابك.",
		"406": "معرف البريد الإلكتروني / رقم الهاتف غير صحيح.",
		"407": "لم يتم تفعيل حسابك ، يرجى تنشيط حسابك."
	},
	"managerSignIn": {
		"200": "تم تسجيل الدخول بنجاح ..",
		"400": "طلب غير ناجح.",
		"401": "كلمة المرور التي تم إدخالها لا تتطابق مع عنوان البريد الإلكتروني الذي تم إدخاله أعلاه ، جرب نسيت كلمة المرور لإعادة تعيين كلمة المرور الخاصة بك أو التسجيل كمستخدم جديد ",
		"402": "لم يتم التحقق من الهاتف",
		"403": "لم تتم الموافقة على هذا الحساب الإداري بعد ، يرجى الاتصال بفريق الدعم لدينا لمزيد من الاستفسارات",
		"404": "هذا الرقم / البريد الإلكتروني غير مسجل لدينا ، يرجى التسجيل كمستخدم جديد أو المحاولة باستخدام رقم / بريد إلكتروني أو كلمة مرور مختلفة",
		"405": "تم حذف حسابك ",
		"406": "معرف البريد الإلكتروني / رقم الهاتف غير صحيح.",
		"407": "تم حظر ملفك الشخصي من قبل فريق العمليات لدينا. يرجى التواصل مع فريق الدعم لدينا لمزيد من المعلومات.",
		"415": "تم تعليق ملف تعريف المستخدم هذا من قبل مسؤول الحساب ، يرجى الاتصال بخدمة العملاء لدينا لمزيد من الاستفسارات",
		"416": "تم حذف ملف التعريف الخاص بك من قبل فريق العمليات لدينا. يرجى التواصل مع فريق الدعم لدينا لمزيد من المعلومات.",
		"417": "تم رفض ملف تعريف هذا المستخدم ، يرجى الاتصال بخدمة العملاء لمزيد من الاستفسارات",
		"418": "لم تتم الموافقة على ملف تعريف هذا المستخدم بعد ، يرجى الاتصال بخدمة العملاء لمزيد من الاستفسارات.",
		"404E": "هذا البريد الإلكتروني غير مسجل لدينا ، يرجى التسجيل كمستخدم جديد أو المحاولة باستخدام بريد إلكتروني أو كلمة مرور مختلفة",
		"404M": "هذا الرقم غير مسجل لدينا ، يرجى التسجيل كمستخدم جديد أو المحاولة باستخدام رقم أو كلمة مرور مختلفة"
	},
	"ordersList": {
		"200": "نجاح",
		"400": "طلب غير ناجح. "
	},
	"driverList": {
		"200": "نجاح",
		"400": "طلب غير ناجح. "
	},
	"driverSignUp": {
		"200": "شكرا لك على التسجيل في   كسائق ، ملفك الشخصي قيد المراجعة وسنخبرك بحالته عبر البريد الإلكتروني"
	},
	"products": {
		"200": "نجاح",
		"400": "طلب غير ناجح.",
		"404": "لم يتم العثور على المنتج"
	},
	"store": {
		"200": "نجاح",
		"400": "طلب غير ناجح.",
		"404": "لم يتم العثور على المتجر"
	},
	"franchise": {
		"200": "نجاح",
		"400": "طلب غير ناجح.",
		"404": "لم يتم العثور على المنتج"
	},
	"slaveGetProvider": {
		"200": "نجاح.",
		"404": "غير موجود"
	},
	"refreshToken": {
		"200": "نجاح.",
		"404": "غير موجود",
		"477": "JWT غير صالح.",
		"499": "jwt منتهية الصلاحية."
	},
	"slaveLocation": {
		"200": "نجاح."
	},
	"slaveGetProviderLoc": {
		"200": "نجاح."
	},
	"supportConfig": {
		"200": "نجاح.",
		"404": "غير موجود"
	},
	"supportForgotPasswordE": {
		"200": "تم إرسال البريد الإلكتروني الذي يحتوي على رابط إعادة التعيين ، يرجى التحقق من صندوق الوارد الخاص بك."
	},
	"supportForgotPassword": {
		"200": "اوك",
		"202": "تم إرسال البريد الإلكتروني الذي يحتوي على رابط إعادة التعيين ، يرجى التحقق من صندوق الوارد الخاص بك.",
		"400": "طلب غير ناجح",
		"403": "هذا البريد الإلكتروني غير مسجل لدينا ، يرجى تجربة بريد إلكتروني آخر.",
		"404": "غير موجود",
		"405": "شكرا لتسجيلك. شكرا لتسجيلك. سيتواصل معك أحد ممثلينا خلال ال 24 ساعة القادمة لإعداد ملف التعريف الخاص بك والحصول على جميع المستندات اللازمة.",
		"406": "رقم الهاتف المحمول هذا غير مسجل لدينا ، يرجى تجربة رقم آخر.",
		"407": "هذا البريد الإلكتروني غير مسجل لدينا ، يرجى تجربة بريد إلكتروني آخر.",
		"413": " لا يمكن استخدام نفس كلمة المرور",
		"414": "كلمة المرور القديمة مطلوبة",
		"429": "لقد استنفدت الحصة المحددة لمحاولات التحقق , حاول مرة اخرى بعد 24 ساعة"
	},
	"supportResendOTP": {
		"200": "تم إرسال رمز التحقق.",
		"404": "المعلومات غير موجودة.",
		"429": "لقد استنفدت الحصة المحددة لمحاولات التحقق , حاول مرة اخرى بعد 24 ساعة"
	},
	"supportPassword": {
		"200": "تم تحديث كلمة المرور الخاصة بك بنجاح.",
		"400": "الرابط منتهي الصلاحية.",
		"404": "المعلومات غير موجودة."
	},
	"supportVerifyOTP": {
		"200": "نجاح التحقق",
		"201": "إرسال رمز التحقق بنجاح..",
		"400": "طلب غير ناجح",
		"401": "تم التحقق من رقم الهاتف المحمول هذا بالفعل",
		"402": "رمز التحقق مطلوب",
		"405": "انتهاء صلاحية رمز التحقق.",
		"406": "الحد الأقصى لمحاولة الوصول إلى طلب اختيار جديد",
		"407": "رمز التحقق خاطئ.",
		"410": "رمز التحقق غير صالح، يرجى المحاولة مرة أخرى",
		"411": "تم التحقق من رمز التحقق هذا بالفعل أو معرف رمز التحقق غير صالح ",
		"429": "لقد استنفدت الحصة المحددة لمحاولات التحقق , حاول مرة اخرى بعد 24 ساعة"
	},
	"supportLogOut": {
		"200": "تم تسجيل الخروج بنجاح.",
		"204": "لم يتم العثور على المستخدم."
	},
	"supportFAQ": {
		"200": "نجاح."
	},
	"fare": {
		"200": "حصلت على التفاصيل.",
		"400": "نوع الطلب الذي اخترته لم يتمكن المتجر من معالجته."
	},
	"supportCancelReason": {
		"200": "حصلت على التفاصيل."
	},
	"supportAccessToken": {
		"200": "حصلت على التفاصيل.",
		"404": "المعلومات غير موجودة."
	},
	"supportReview": {
		"200": "حصلت على التفاصيل.",
		"404": "المعلومات غير موجودة."
	},
	"supportGetReview": {
		"200": "حصلت على التفاصيل.",
		"404": "لم يتم العثور على المراجعة."
	},
	"supportPhone": {
		"200": "تم التحديث بنجاح.",
		"404": "لم يتم العثور على المستخدم."
	},
	"addAddress": {
		"200": "تمت إضافة العنوان بنجاح."
	},
	"editAddress": {
		"200": "تم تحديث العنوان بنجاح.",
		"403": "عفوا! نحن لا نعمل في منطقتك في الوقت الحالي ، يرجى تحديد عنوان مختلف."
	},
	"getAddress": {
		"200": "نجاح.",
		"404": "لم يتم العثور على العنوان"
	},
	"removeAddress": {
		"200": "تم حذف العنوان بنجاح."
	},
	"referalCode": {
		"200": "رمز الإحالة صالح",
		"400": "رمز الإحالة غير صالح"
	},
	"disLogin": {
		"200": "تسجيل الدخول بنجاح",
		"401": "كلمة المرور غير صحيحة، يرجى المحاولة مرة أخرى.",
		"404": "لم يتم العثور على المستخدم"
	},
	"disProvider": {
		"200": "حصلت على قائمة مقدمي الخدمات"
	},
	"createBooking": {
		"200": "إنشاء الحجز بنجاح"
	},
	"ackBooking": {
		"200": "تم تحديث الحجز بنجاح",
		"404": "لم يتم العثور على الحجز"
	},
	"responseBooking": {
		"200": "تم تحديث الحجز بنجاح",
		"404": "لم يتم العثور على الحجز"
	},
	"statusBooking": {
		"200": "تم تحديث الحجز بنجاح",
		"400": "حالة الحجز غير محدثة",
		"404": "لم يتم العثور على الحجز"
	},
	"getMasterBooking": {
		"200": "احصل على جميع تفاصيل الحجز"
	},
	"historyMasterBooking": {
		"200": "احصل على جميع تفاصيل الحجز"
	},
	"getSlaveBooking": {
		"200": "احصل على جميع تفاصيل الحجز"
	},
	"getSlaveOneBooking": {
		"200": "احصل على جميع تفاصيل الحجز",
		"404": "لم يتم العثور على الحجز"
	},
	"cancelBookingSlave": {
		"200": " تم إلغاء الحجز بنجاح",
		"404": "لم يتم العثور على الحجز"
	},
	"timerBooking": {
		"200": {
			"0": "المؤقت يبدأ"
		},
		"400": {
			"0": "بدأ المؤقت بالفعل"
		},
		"404": "لم يتم العثور على الحجز"
	},
	"cancelBookingMaster": {
		"200": " تم إلغاء الحجز بنجاح",
		"404": "لم يتم العثور على الحجز"
	},
	"stripeAddCard": {
		"200": "اضيف بنجاح.",
		"404": "لم يتم العثور على المستخدم"
	},
	"stripeGetCard": {
		"200": "اضيف بنجاح.",
		"404": "لم يتم العثور على المستخدم"
	},
	"stripeDeleteCard": {
		"200": "الحصول على تفاصيل البطاقة.",
		"402": "لم يتم العثور على البطاقة",
		"404": "لم يتم العثور على المستخدم"
	},
	"stripeDefualtCard": {
		"200": "الحصول على تفاصيل البطاقة.",
		"404": "لم يتم العثور على المستخدم"
	},
	"stripeAddBank": {
		"200": "اضيف بنجاح.",
		"404": "لم يتم العثور على المستخدم"
	},
	"stripeGetBank": {
		"200": "اضيف بنجاح.",
		"404": "لم يتم العثور على المستخدم"
	},
	"stripeDeleteBank": {
		"200": "حذف تفاصيل البنك.",
		"400": "لا يمكن حذف الحساب الافتراضي. يرجى جعل حساب آخر افتراضيا & ثم حذف هذا الحساب.",
		"404": "لا يوجد مثل هذا الحساب"
	},
	"stripeDefualtBank": {
		"200": "حذف تفاصيل البنك.",
		"400": "لا يمكن حذف الحساب الافتراضي. يرجى جعل حساب آخر افتراضيا & ثم حذف هذا الحساب.",
		"404": "لا يوجد مثل هذا الحساب"
	},
	"checkOperationZone": {
		"200": "في منطقة العمليات.",
		"400": "عذرا ، نحن لا نقوم بالتوصيل إلى عنوانك المحدد في الوقت الحالي لأنه خارج متناول التسليم.",
		"404": "لا يوجد مثل هذا الحساب"
	},
	"appVersionAlreadyExist": {
		"400": "إصدار التطبيق بهذا النوع موجود بالفعل ، يرجى تحديد نوع جديد."
	},
	"symptoms": {
		"get": {
			"description": "Api for Get Symptoms.",
			"notes": "This API allows user to get Symptoms."
		},
		"post": {
			"description": "Api for Add Symptoms.",
			"notes": "This API allows user to add Symptoms."
		},
		"patch": {
			"description": "Api for Update Symptoms.",
			"notes": "This API allows user to update Symptoms."
		},
		"put": {
			"description": "Api for change status of Symptoms.",
			"notes": "This API allows user to change status of Symptoms."
		},
		"delete": {
			"description": "Api for Delete Symptoms.",
			"notes": "This API allows user to delete Symptoms."
		},
		"response": {
			"200": "نجاح"
		}
	},
	"taxSetup": {
		"get": {
			"description": "Api for Get Tax Details.",
			"notes": "This API allows user to get Tax Details."
		},
		"post": {
			"description": "Api for Add Tax Details.",
			"notes": "This API allows user to add Tax Details."
		},
		"patch": {
			"description": "Api for Update Tax Details.",
			"notes": "This API allows user to update Tax Details."
		},
		"put": {
			"description": "Api for change status of Tax Details.",
			"notes": "This API allows user to change status of Tax Details."
		},
		"delete": {
			"description": "Api for Delete Tax Details.",
			"notes": "This API allows user to delete Tax Details."
		},
		"response": {
			"200": "نجاح"
		}
	},
	"getStoreCategorySettings": {
		"404": {
			"city": "لم يتم العثور على مدينة من معرف المدينة أو خط العرض وخط الطول",
			"category": "لم يتم العثور على إعدادات الفئة ، يرجى تحسين البحث الخاص بك"
		},
		"412": "لم يتم العثور على المدينة من خطوط الطول والعرض",
		"413": "معرف المدينة غير صالح"
	},
	"specialities": {
		"get": {
			"description": "Api for Get Specialities.",
			"notes": "This API allows user to get Specialities."
		},
		"getAll": {
			"description": "Api for Get All Specialities.",
			"notes": "This API allows user to get all Specialities."
		},
		"post": {
			"description": "Api for Add Specialities.",
			"notes": "This API allows user to add Specialities."
		},
		"patch": {
			"description": "Api for Edit Specialities.",
			"notes": "This API allows user to edit Specialities."
		},
		"delete": {
			"description": "Api for Delete Specialities.",
			"notes": "This API allows user to delete Specialities."
		},
		"response": {
			"404": "لم يتم العثور على ، حدد بحثك"
		},
		"responseDescription": {
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة."
		}
	},
	"storeAttributes": {
		"get": {
			"description": "Api for Get Store Attribute.",
			"notes": "This API allows user to get Store Attribute."
		},
		"getAll": {
			"description": "Api for Get All Store Attribute.",
			"notes": "This API allows user to get all Store Attribute."
		},
		"post": {
			"description": "Api for Add Store Attribute.",
			"notes": "This API allows user to add Store Attribute."
		},
		"patch": {
			"description": "Api for Edit Store Attribute.",
			"notes": "This API allows user to edit Store Attribute."
		},
		"put": {
			"description": "Api for change status of  Store Attribute.",
			"notes": "This API allows user to change status of  Store Attribute."
		},
		"delete": {
			"description": "Api for Delete Store Attribute.",
			"notes": "This API allows user to delete Store Attribute."
		},
		"response": {
			"404": "لم يتم العثور على ، حدد بحثك"
		},
		"responseDescription": {
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة."
		}
	},
	"googleKeys": {
		"get": {
			"description": "Api for Get Google Keys.",
			"notes": "This API allows user to get Google Keys."
		},
		"getAll": {
			"description": "Api for Get All Google Keys.",
			"notes": "This API allows user to get all Google Keys."
		},
		"post": {
			"description": "Api for Add Google Keys.",
			"notes": "This API allows user to add Google Keys."
		},
		"patch": {
			"description": "Api for Edit Google Keys.",
			"notes": "This API allows user to edit Google Keys."
		},
		"delete": {
			"description": "Api for Delete Google Keys.",
			"notes": "This API allows user to delete Google Keys."
		},
		"response": {
			"404": "لم يتم العثور على ، حدد بحثك"
		},
		"responseDescription": {
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة."
		}
	},
	"videoSlotAttribute": {
		"get": {
			"description": "Api for Get Video Slot Attribute.",
			"notes": "This API allows user to get Video Slot Attribute."
		},
		"response": {
			"404": "لم يتم العثور على ، حدد بحثك"
		},
		"responseDescription": {
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة."
		}
	},
	"contactFormFields": {
		"get": {
			"description": "Api for Get contact form fields.",
			"notes": "This API allows user to get contact form fields."
		},
		"post": {
			"description": "Api for Add contact form fields.",
			"notes": "This API allows user to add contact form fields."
		},
		"patch": {
			"description": "Api for Update contact form fields.",
			"notes": "This API allows user to update contact form fields."
		},
		"delete": {
			"description": "Api for Delete contact form fields.",
			"notes": "This API allows user to delete contact form fields."
		},
		"response": {
			"200": "نجاح",
			"400": "%s الملف مفقود/غير صالح ",
			"404": "لم يتم العثور على البيانات مع هويتك",
			"500": "خطأ في الخادم الداخلي "
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"400": "طلب غير صحيح أثناء فقدان بعض البيانات أو عدم صلاحيتها .",
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة.",
			"500": "يحدث هذا الخطأ أثناء حدوث خطأ داخلي في الخادم ."
		}
	},
	"caseStudyDynamicFields": {
		"get": {
			"description": "Api for Get Case Study Dynamic Fields.",
			"notes": "This API allows user to get Case Study Dynamic Fields."
		},
		"post": {
			"description": "Api for Add Case Study Dynamic Fields.",
			"notes": "This API allows user to add Case Study Dynamic Fields."
		},
		"patch": {
			"description": "Api for Update Case Study Dynamic Fields.",
			"notes": "This API allows user to update Case Study Dynamic Fields."
		},
		"delete": {
			"description": "Api for Delete Case Study Dynamic Fields.",
			"notes": "This API allows user to delete Case Study Dynamic Fields."
		},
		"response": {
			"200": "نجاح",
			"400": "%s الملف مفقود/غير صالح ",
			"404": "لم يتم العثور على البيانات مع هويتك",
			"500": "خطأ في الخادم الداخلي "
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"400": "طلب غير صحيح أثناء فقدان بعض البيانات أو عدم صلاحيتها .",
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة.",
			"500": "يحدث هذا الخطأ أثناء حدوث خطأ داخلي في الخادم ."
		}
	},
	"contactFormSubmissions": {
		"post": {
			"description": "Api for Add contact form request.",
			"notes": "This API allows user to add contact form request."
		},
		"get": {
			"description": "Api for get contact form requests.",
			"notes": "This API allows user to get contact form requests."
		},
		"response": {
			"200": "نجاح",
			"400": "%s الملف مفقود/غير صالح ",
			"404": "لم يتم العثور على البيانات مع هويتك",
			"500": "خطأ في الخادم الداخلي "
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"400": "طلب غير صحيح أثناء فقدان بعض البيانات أو عدم صلاحيتها .",
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة.",
			"500": "يحدث هذا الخطأ أثناء حدوث خطأ داخلي في الخادم ."
		}
	},
	"caseStudyDetails": {
		"get": {
			"description": "Api for Get Case Study List.",
			"notes": "This API allows user to get Case Study List."
		},
		"post": {
			"description": "Api for Add Case Study List.",
			"notes": "This API allows user to add Case Study List."
		},
		"patch": {
			"description": "Api for Update Case Study List.",
			"notes": "This API allows user to update Case Study List."
		},
		"delete": {
			"description": "Api for Delete Case Study List.",
			"notes": "This API allows user to delete Case Study List."
		},
		"response": {
			"200": "نجاح",
			"400": "%s الملف مفقود/غير صالح ",
			"404": "لم يتم العثور على البيانات مع هويتك",
			"500": "خطأ في الخادم الداخلي "
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"400": "طلب غير صحيح أثناء فقدان بعض البيانات أو عدم صلاحيتها .",
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة.",
			"500": "يحدث هذا الخطأ أثناء حدوث خطأ داخلي في الخادم ."
		}
	},
	"slots": {
		"get": {
			"description": "Api for to Get slots.",
			"notes": "This API allows user to Get slots.",
			"fields": {
				"storeId": "مخزنة للحصول على فتحات.",
				"actualStoreId": "معرف المتجر الفعلي في حالة التحقق من ساعات العمل.",
				"date": "تاريخ الحصول على فتحات بتنسيق YYYY-MM-DD.",
				"upto": "للحصول على رحلة تصل إلى أيام من حقل التاريخ.",
				"bufferTime": "الوقت المؤقت بالدقائق للحصول على رحلة.",
				"slotsAfter": "الطابع الزمني للحصول على رحلات بعد الوقت.",
				"latitude": "الموقع الذي تريد الرحلة منه.",
				"longitude": "الموقع الذي تريد الرحلة منه.",
				"zoneId": "معرف المنطقة الذي تريد رحلة منه.",
				"cityId": "معرف المدينة الذي تريد رحلة منه.",
				"slotData": "بيانات الرحلة.",
				"id": "معرف الرحلة .",
				"startTime": "وقت بدء الرحلة.",
				"endTime": "وقت انتهاء الرحلة.",
				"slotType": "Slot Type 1-lastmile delivery, 2-store to dc.",
				"status": "احصل على عدد الطلبات بناء على الحالة. (فقط لمدير dc)"
			},
			"response": {
				"403": "نوع المستخدم غير صالح.",
				"404": "المنطقة غير متوفرة."
			},
			"responseDescription": {
				"403": "سيحدث هذا عندما يكون طلب المستخدم غير صالح.",
				"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة."
			}
		}
	},
	"vouchers": {
		"get": {
			"description": "Api for Get Voucher.",
			"notes": "This API allows user to get Voucher."
		},
		"post": {
			"description": "Api for Add Voucher.",
			"notes": "This API allows user to add Voucher."
		},
		"patch": {
			"description": "Api for Update Voucher.",
			"notes": "This API allows user to update Voucher."
		},
		"delete": {
			"description": "Api for Delete Voucher.",
			"notes": "This API allows user to delete Voucher."
		},
		"response": {
			"200": "نجاح",
			"400": "%s الملف مفقود/غير صالح ",
			"404": "لم يتم العثور على القسيمة مع بطاقة الهوية الخاصة بك",
			"409": "القسيمة موجودة بالفعل",
			"500": "خطأ في الخادم الداخلي ",
			"404c": "لم يتم العثور على المدينة مع معرف المدينة الخاص بك"
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"400": "طلب غير صحيح أثناء فقدان بعض البيانات أو عدم صلاحيتها .",
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة.",
			"409": "سيحدث هذا أثناء وجود البيانات المطلوبة بالفعل.",
			"500": "يحدث هذا الخطأ أثناء حدوث خطأ داخلي في الخادم ."
		}
	},
	"voucherPacks": {
		"get": {
			"description": "Api for Get Voucher Pack.",
			"notes": "This API allows user to get Voucher Pack."
		},
		"post": {
			"description": "Api for Add Voucher Pack.",
			"notes": "This API allows user to add Voucher Pack."
		},
		"patch": {
			"description": "Api for Update Voucher Pack Status.",
			"notes": "This API allows user to Update Voucher Pack Status."
		},
		"delete": {
			"description": "Api for Delete Voucher Pack.",
			"notes": "This API allows user to delete Voucher Pack."
		},
		"response": {
			"200": "نجاح",
			"400": "%s الملف مفقود/غير صالح ",
			"404": "لم يتم العثور على حزمة القسيمة مع المعرف الخاص بك أو انتهت صلاحيتها",
			"409": "تم حذف حزمة القسيمة بالفعل",
			"500": "خطأ في الخادم الداخلي ",
			"409d": "تاريخ البدء وانتهاء الصلاحية غير صالح",
			"409edt": "التواريخ المستبعدة خارج نطاق تاريخ البدء وانتهاء الصلاحية",
			"409a": "حزمة القسائم مفعلة بالفعل",
			"409da": "حزمة القسيمة معطلة بالفعل"
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"400": "طلب غير صحيح أثناء فقدان بعض البيانات أو عدم صلاحيتها .",
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة.",
			"409": "سيحدث هذا أثناء وجود البيانات المطلوبة بالفعل.",
			"500": "يحدث هذا الخطأ أثناء حدوث خطأ داخلي في الخادم ."
		}
	},
	"bookMarks": {
		"get": {
			"description": "Api for Get Bookmarks.",
			"notes": "This API allows user to get Bookmarks."
		},
		"post": {
			"description": "Api for Add Bookmarks.",
			"notes": "This API allows user to add Bookmarks."
		},
		"delete": {
			"description": "Api for Delete Bookmarks.",
			"notes": "This API allows user to delete Bookmarks."
		},
		"response": {
			"404": {
				"bookmark": "لم يتم العثور على الإشارات المرجعية",
				"user": "لم يتم العثور على المستخدم"
			}
		}
	},
	"voucherList": {
		"get": {
			"description": "Api for Get Voucher List.",
			"notes": "This API allows user to get Voucher List."
		},
		"purchase": {
			"description": "Api for Update Voucher List and Buy Voucher",
			"notes": "This API allows user to Buy Voucher"
		},
		"claim": {
			"description": "Api for Update Voucher List and Claim Voucher",
			"notes": "This API allows user to use/claim Purchased Voucher"
		},
		"validate": {
			"description": "Api for get status of the voucher",
			"notes": "This API allows get status of the voucher"
		},
		"response": {
			"200": "نجاح",
			"400": "%s الملف مفقود/غير صالح ",
			"404": "لم يتم العثور على القسيمة مع الرمز الخاص بك أو معرف حزمة القسيمة خاطئ",
			"500": "خطأ في الخادم الداخلي ",
			"409p": "تم شراء القسيمة المطلوبة بالفعل",
			"409np": "لم يتم شراء القسيمة المطلوبة، قسيمة الشراء أولا",
			"409c": "تمت المطالبة بالقسيمة المطلوبة بالفعل",
			"409e": "انتهت صلاحية القسيمة المطلوبة",
			"409d": "تم حذف القسيمة المطلوبة"
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"400": "طلب غير صحيح أثناء فقدان بعض البيانات أو عدم صلاحيتها .",
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة.",
			"500": "يحدث هذا الخطأ أثناء حدوث خطأ داخلي في الخادم .",
			"409p": "سيحدث هذا أثناء شراء القسيمة المطلوبة بالفعل.",
			"409np": "سيحدث هذا أثناء عدم شراء القسيمة المطلوبة ومحاولة المطالبة.",
			"409c": "سيحدث هذا أثناء المطالبة بالقسيمة المطلوبة بالفعل.",
			"409e": "سيحدث هذا أثناء انتهاء صلاحية القسيمة المطلوبة.",
			"409d": "سيحدث هذا أثناء حذف القسيمة المطلوبة."
		}
	},
	"aboutUs": {
		"get": {
			"description": "Api for Get About-Us details.",
			"notes": "This API allows user to get About-Us details."
		},
		"patch": {
			"description": "Api for Update About-Us details.",
			"notes": "This API allows user to update About-Us details."
		},
		"response": {
			"200": "نجاح",
			"400": "%s الملف مفقود/غير صالح ",
			"404": "لم يتم العثور على البيانات مع هويتك",
			"500": "خطأ في الخادم الداخلي "
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"400": "طلب غير صحيح أثناء فقدان بعض البيانات أو عدم صلاحيتها .",
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة.",
			"500": "يحدث هذا الخطأ أثناء حدوث خطأ داخلي في الخادم ."
		}
	},
	"stores": {
		"200": "نجاح.",
		"201": "نجاح",
		"404": "لم يتم العثور على المعلومات",
		"409": "اسم المتجر موجود بالفعل مع المتاجر الأخرى"
	},
	"orders": {
		"200": "تم تقديم الطلب بنجاح.",
		"201": "قام المسافر بإلغاء الحجز.",
		"301": "اكتمل الحجز بالفعل.",
		"302": "  تم التحديث حالة الحجز بالفعل..",
		"303": "الحجز منتهي الصلاحية أو مقبول من قبل شخص آخر",
		"400": "سائق غير موجود",
		"402": "لا ينبغي أن تكون عربة التسوق فارغة",
		"404": "لم يتم العثور على الطلب"
	},
	"virtualOrders": {
		"404": {
			"order": "لم يتم العثور على طلب مكالمة الفيديو",
			"slotTime": "توقيت الرحلة ليس مع طلبك "
		},
		"409": {
			"accept": "يجب قبول الطلبات أولا",
			"cancel": "لا يمكن إلغاء الطلبات المعتمدة",
			"reAccept": "لا يمكن قبول الطلبات الملغاة والمرفوضة أو توصيلها",
			"userMismatch": "لا يسمح لك بإنشاء رمز مميز نظرا لأن معرف المستخدم الخاص بك لا يحتوي على أي طلب فيديو",
			"startMismatch": "لا يسمح لك بإنشاء رمز مميز لأن مكالمة الفيديو الخاصة بك لم تبدأ بعد",
			"endMismatch": "لا يسمح لك بإنشاء رمز مميز بسبب انتهاء صلاحية عداد مكالمة الفيديو الخاصة بك"
		}
	},
	"virtualPlan": {
		"404": "لم يتم العثور على الخطة الافتراضية"
	},
	"virtualPlanLog": {
		"404": "لم يتم العثور على سجلات الخطة الافتراضية"
	},
	"bookings": {
		"200": "تم التحديث بنجاح.",
		"201": "تم إلغاء الحجز.",
		"301": "اكتمل الحجز بالفعل.",
		"302": "تم تحديث حالة الحجز بالفعل ..",
		"303": "الحجز منتهي الصلاحية أو مقبول من قبل شخص آخر",
		"304": "مرت كمية غير صالحة.",
		"400": "سائق غير موجود",
		"403": "تم إلغاء الطلب بالفعل",
		"404": "الحجوزات غير موجودة في التاريخ المحدد",
		"405": "هذا هو العنصر الأخير من الطلب إذا قمت بإلغاء هذا العنصر ، فسيؤدي ذلك إلى إلغاء الطلب بالكامل. هل ترغب في إجراء عملية?"
	},
	"assignedOrders": {
		"200": "تم التحديث بنجاح."
	},
	"cart": {
		"200": "نجاح.",
		"201": "تمت الإضافة بنجاح إلى عربة التسوق.",
		"202": "تمت الإزالة بنجاح من عربة التسوق.",
		"203": "تم التحديث بنجاح إلى عربة التسوق.",
		"401": "%s لا يقبل الطلبات حاليا.",
		"403": "يرجى إكمال طلبك النشط قبل تقديم طلب جديد.",
		"404": "لم يتم العثور على المعلومات",
		"412": "العنصر موجود بالفعل في عربة التسوق.",
		"413": "عربة التسوق متاحة بالفعل مع نفس المستخدم",
		"414": "متجر واحد يسمح في عربة التسوق مع هذه الفئة.",
		"415": "العنوان الذي أدخلته غير صالح للخدمة ، يرجى تحديد عنوان مختلف والمحاولة مرة أخرى!.",
		"416": "لقد وصلت إلى الحد الأقصى المسموح به لكل طلب لهذه الفئة من المنتجات ، يتم تعيين حد حاكم الحكومة على أنه ٪s زجاجات لهذه الفئة",
		"417": "لقد وصلت إلى الحد الأقصى المسموح به لكل طلب لهذه الفئة من المنتجات ، تم تعيين حد حاكم الحكومة على أنه ٪s ٪s لهذه الفئة",
		"418": "لا يمكنك طلب أكثر من ٪s العناصر لكل طلب لهذا المنتج."
	},
	"checkout": {
		"200": "نجاح.",
		"201": "تمت الإضافة بنجاح إلى عربة التسوق.",
		"202": "تمت الإزالة بنجاح من عربة التسوق.",
		"203": "يتم تعديل بعض العناصر داخل عربة التسوق.",
		"404": "لم يتم العثور على المعلومات",
		"412": "العنصر موجود بالفعل في عربة التسوق."
	},
	"shoppingList": {
		"200": "نجاح.",
		"201": "تمت الإضافة بنجاح إلى قائمة التسوق.",
		"202": "تمت الإزالة بنجاح من قائمة التسوق.",
		"203": "تم التحديث بنجاح إلى قائمة التسوق.",
		"404": "لم يتم العثور على المعلومات",
		"412": "العنصر الموجود بالفعل في قائمة التسوق."
	},
	"storeList": {
		"200": "نجاح.",
		"201": "تمت الإضافة بنجاح إلى قائمة المتجر.",
		"202": "تمت الإزالة بنجاح من قائمة المتاجر.",
		"203": "تم التحديث بنجاح إلى قائمة المتجر.",
		"404": "لم يتم العثور على المعلومات",
		"412": "مخزن بالفعل في قائمة المتاجر ."
	},
	"wishList": {
		"200": "نجاح.",
		"201": "تمت الإضافة بنجاح إلى قائمة الرغبات.",
		"202": "تمت الإزالة بنجاح من قائمة الرغبات.",
		"203": "تم التحديث بنجاح.",
		"404": "لم يتم العثور على المعلومات",
		"412": "العنصر موجود بالفعل في قائمة الرغبات."
	},
	"PostProduct": {
		"201": "تمت إضافة المنتج بنجاح."
	},
	"GetProduct": {
		"200": "تم العثور على المنتج بنجاح.",
		"412": "المنتج غير موجود."
	},
	"vehicles": {
		"200": "اضيف بنجاح.",
		"400": "لم يتم العثور على نوع السيارة",
		"401": "لم يتم العثور على نوع السيارة",
		"404": "لم يتم العثور على السيارة"
	},
	"verifyId": {
		"401": "لم يتم التحقق من بطاقة الهوية الخاصة بك.",
		"402": "لم يتم التحقق من بطاقة MMJ الخاصة بك."
	},
	"customer": {
		"200": "نجاح",
		"404": "لم يتم العثور على المعلومات"
	},
	"promoCampaigns": {
		"200": "نجاح",
		"400": "لم يتم العثور على رموز ترويجية",
		"401": "لم يتم العثور على تفاصيل",
		"404": "لم يتم العثور على المعلومات"
	},
	"promoCode": {
		"200": "تمت إضافة رمز القسيمة بنجاح",
		"400": "لم يتم العثور على رموز ترويجية",
		"401": "لم يتم العثور على تفاصيل",
		"404": "لم يتم العثور على المعلومات"
	},
	"customerPostSignIn": {
		"400": "طلب غير ناجح.",
		"402": "كلمة المرور غير صحيحة.",
		"403": "تم إلغاء تنشيط حسابك. يرجى الكتابة إلينا على support@Geeyemobile.com لمزيد من التفاصيل.",
		"404": "هذا البريد الإلكتروني أو رقم الهاتف غير مسجل لدينا ، يرجى التسجيل كمستخدم جديد",
		"409": "هذا البريد الإلكتروني مسجل بالفعل معنا. يرجى القيام بتسجيل الدخول بكلمة المرور",
		"410": "هذا البريد الإلكتروني مسجل بالفعل معنا. يرجى القيام بتسجيل الدخول بكلمة المرور",
		"411": "لم يتم تفعيل حسابك ، يرجى تنشيط حسابك."
	},
	"signIn": {
		"405": "تم حذف حسابك ، يرجى الاتصال بقسم الدعم لمزيد من الاستفسارات.",
		"410": "البريد الإلكتروني مطلوب",
		"411": "رقم الهاتف مطلوب",
		"412": "رمز البلد مطلوب",
		"414": "كلمة المرور مطلوبة ",
		"410e": "بريد الكتروني غير صالح"
	},
	"postBookingAck": {
		"200": "نجاح",
		"400": "تمت انتهاء صلاحية الحجز.",
		"404": "لم يتم العثور على الحجز."
	},
	"fareMsg": {
		"200": "حصلت على التفاصيل.",
		"400": "المتجر التالي غير قابل للتسليم لموقعك."
	},
	"storeSignUp": {
		"200": "تسجيل ناجح."
	},
	"messages": {
		"sessionMsgPushBody": "انتهت صلاحية جلستك ، يرجى تسجيل الدخول مرة أخرى لمتابعة الوصول إلى حسابك.",
		"sessionMsgPushTitle": "انتهت صلاحية الجلسة",
		"ban": "تم حظر ملفك الشخصي من قبل مشرفنا ، يرجى الاتصال بقسم الدعم لمزيد من الاستفسارات.",
		"reject": "تم رفض ملفك الشخصي من قبل مشرفنا ، يرجى الاتصال بقسم الدعم لمزيد من الاستفسارات.",
		"new": "سيتواصل معك أحد ممثلينا خلال ال 24 ساعة القادمة لإعداد ملف التعريف الخاص بك والحصول على جميع المستندات اللازمة.",
		"loggedOut": "لقد تم تسجيل خروجك من قبل فريق العمليات لدينا ، يرجى تسجيل الدخول مرة أخرى لمواصلة الوصول إلى حسابك."
	},
	"getAppConfig": {
		"200": "نجاح",
		"402": "نوع الجهاز غير صالح",
		"404": "لم يتم العثور على الحساب"
	},
	"getZoneErrMsg": {
		"200": "نجاح.",
		"404": "لم يتم العثور على مدينة"
	},
	"postStatus": {
		"200": "نجاح."
	},
	"postStatusRide": {
		"200": "نجاح",
		"400": "لا يمكن تحديث الحالة غير صالحة.",
		"401": "الموقع غير صالح.",
		"402": "غير قادر على حساب المسافة.",
		"404": "تم إلغاء الحجز أو إكماله."
	},
	"postRespondTo": {
		"200": "نجاح",
		"400": "تم إلغاء الحجز أو قبوله من قبل سائق آخر.",
		"404": "لم يتم العثور على الحجز.",
		"405": "لم يتم العثور على بيانات السائق.",
		"406": "لم يتم العثور على حالة الرد على الحجز.",
		"407": "لم يتم العثور على حالة بيانات السيارة."
	},
	"logs": {
		"200": "تم نشر سجل جديد بنجاح"
	},
	"promo": {
		"200": "تمت إضافة العرض الترويجي بنجاح"
	},
	"inventoryCheck": {
		"400": "العنصر غير متوفر في المخزن.",
		"403": "بعض العناصر الموجودة في سلة التسوق الخاصة بك غير متوفرة في المخزون."
	},
	"adminPostSignIn": {
		"404": "الملف الشخصي للمسؤول غير موجود"
	},
	"inventoryStock": {
		"400": "Onmogelijk om meer te bezorgen dan de beschikbare voorraad."
	},
	"البطاقة": {
		"404": "لا توجد بطاقة تحمل اسم العميل المحدد"
	},
	"stripeAccount": {
		"200": " تم إنشاء حساب اتصال الشريط بنجاح",
		"404": "There is no stripe account with given token"
	},
	"plan": {
		"200": "تم حذف الخطة بنجاح",
		"updated": "تم تحديث الخطة بنجاح",
		"created": "تم إنشاء الخطة بنجاح"
	},
	"subscribe": {
		"200": "تم حذف الاشتراك بنجاح",
		"404": "لا توجد خطة مشترك"
	},
	"apiDescription": {
		"login": "This API is used to login ",
		"signup": "This API is used to signup",
		"captureCharge": "This API is used to capture charge",
		"getCharge": "This API is used to get charge",
		"postCharge": "This API is used to post charge",
		"refundCharge": "This API is used to refund charge",
		"cardToken": "This API is used to get card token",
		"deleteCard": "This API is used to delete card",
		"getCard": "This API is used to get card",
		"patchCard": "This API is used to update card",
		"postCard": "This API is used to create customer and add card to that customer",
		"deletePlan": "This API is used to delete a plan",
		"getPlan": "This API is used to get plan",
		"patchPlan": "This API is used to update plan",
		"postPlan": "This API is used to create plan",
		"getStripeAccount": "This API is used to get stripe account details",
		"patchStripeAccount": "This API is used to update stripe account",
		"postStripeAccount": "This API is used to create account on stripe",
		"deleteExternalAccount": "This API is used to delete bank account of stripe account",
		"patchExternalAccount": "This API is used to update bank account of stripe's account",
		"postExternalAccount": "This API is used to add a bank account on stripe's account",
		"getStripeAccountAdmin": "This API is used to get stripe account details",
		"patchStripeAccountAdmin": "This API is used to update stripe account",
		"postStripeAccountAdmin": "This API is used to create account on stripe",
		"deleteExternalAccountAdmin": "This API is used to delete bank account of stripe account",
		"patchExternalAccountAdmin": "This API is used to update bank account of stripe's account",
		"postExternalAccountAdmin": "This API is used to add a bank account on stripe's account",
		"deleteSubscribe": "This API is used to delete a subscription",
		"getSubscribe": "This API is used to get subscription",
		"patchSubscribe": "This API is used to update subscription",
		"postSubscribe": "This API is used to create a subscription",
		"payoff": "This API is used to payoff user from admin",
		"stripeCardPost": "This API allows user add new card on stripe.",
		"stripeCardGet": "This API allows user get all added card.",
		"stripeCardPatch": "This API allows user to change the default card.",
		"stripeCardDelete": "This API allows user to delete added card.",
		"stripeConnectAccountGet": "This API allows user to get stripe connect account details.",
		"stripeConnectAccountPost": "This API allows user to create or update stripe connect account.",
		"stripeExternalAccountPost": "This API allows user add new Bank on stripe.",
		"stripeExternalAccountPatch": "This API allows user to change the default Bank.",
		"stripeExternalAccountDelete": "This API allows user to delete added Bank.",
		"stripePlanPost": "This API allows admin user to add new subscription plan on stripe.",
		"stripePlanGet": "This API allows user get all added subscription plan.",
		"stripePlanPatch": "This API allows admin user to modifyi plan details.",
		"stripePlanDelete": "This API allows admin user to delete added plan.",
		"stripeSubscribePost": "This API allows user to subscribe plan on stripe.",
		"stripeSubscribeGet": "This API allows user get subscription details.",
		"stripeSubscribePatch": "This API allows user to modifyi subscribe details.",
		"stripeSubscribeDelete": "This API allows remove subscription on stripe."
	},
	"apiNotes": {
		"login": "This API is used to login ",
		"signup": "This API is used to signup",
		"captureCharge": "This API is used to capture charge",
		"getCharge": "This API is used to get charge",
		"postCharge": "This API is used to post charge",
		"refundCharge": "This API is used to refund charge",
		"cardToken": "This API is used to get card token",
		"deleteCard": "This API is used to delete card",
		"getCard": "This API is used to get card",
		"patchCard": "This API is used to update card",
		"postCard": "This API is used to create customer and add card to that customer",
		"deletePlan": "This API is used to delete a plan",
		"getPlan": "This API is used to get plan",
		"patchPlan": "This API is used to update plan",
		"postPlan": "This API is used to create plan",
		"getStripeAccount": "This API is used to get stripe account details",
		"patchStripeAccount": "This API is used to update stripe account",
		"postStripeAccount": "This API is used to create account on stripe",
		"deleteExternalAccount": "This API is used to delete bank account of stripe account",
		"patchExternalAccount": "This API is used to update bank account of stripe's account",
		"postExternalAccount": "This API is used to add a bank account on stripe's account",
		"getStripeAccountAdmin": "This API is used to get stripe account details",
		"patchStripeAccountAdmin": "This API is used to update stripe account",
		"postStripeAccountAdmin": "This API is used to create account on stripe",
		"deleteExternalAccountAdmin": "This API is used to delete bank account of stripe account",
		"patchExternalAccountAdmin": "This API is used to update bank account of stripe's account",
		"postExternalAccountAdmin": "This API is used to add a bank account on stripe's account",
		"deleteSubscribe": "This API is used to delete a subscription",
		"getSubscribe": "This API is used to get subscription",
		"patchSubscribe": "This API is used to update subscription",
		"postSubscribe": "This API is used to create a subscription",
		"payoff": "This API is used to payoff user from admin"
	},
	"cognitoTokenGet": {
		"200": {
			"message": "نجاح.",
			"description": "سيحصل المستخدم على رمز التصفح المتخفي"
		},
		"500": {
			"message": "internal server error  from cognitoTokenGet api",
			"description": "خطأ في الخادم الداخلي "
		},
		"description": "This api is used to get aws cognito token, User will get token and identity token used to upload image to s3 bucket",
		"notes": "This api return IdentityId and Token. Token expiry time is 15 min, once a انتهت صلاحية الرمز المميز  then you need to call again same api so you will get new token.",
		"responseDescription": {
			"IdentityId": "IdentityId is uniqe id for each user example : ap-south-1:73167401-95d8-4981-a76e-eafeed2d5000",
			"Token": "الرمز المميز هو انتهاء الصلاحية كل 15 دقيقة مثال : eyJraWQiOiJhcC1zb3V0aC0xMSIsInR5cCI6IkpXUyIsImFsZyI6IlJTNTEyIn0.eyJzdWIiOiJhcC1zb3V0aC0xOjczMTY3NDAxLTk1ZDgtNDk4MS1hNzZlLWVhZmVlZDJkNTAwMCIsImF1ZCI6ImFwLXNvdXRoLTE6N2I0YWM1NGYtODBmZS00Y2FjLWE3NmEtODlmYjNlYzgxNzUxIiwiYW1yIjpbImF1dGhlbnRpY2F0ZWQiLCJzZXJ2aWNlZ2VuaWUuM2VtYmVkIiwic2VydmljZWdlbmllLjNlbWJlZDphcC1zb3V0aC0xOjdiNGFjNTRmLTgwZmUtNGNhYy1hNzZhLTg5ZmIzZWM4MTc1MTptYWhlbmRyYSB2YWdoYW5pIl0sImlzcyI6Imh0dHBzOi8vY29nbml0by1pZGVudGl0eS5hbWF6b25hd3MuY29tIiwiZXhwIjoxNTgwMzgyNDY3LCJpYXQiOjE1ODAzODIzNDd9.RTAlTUUBvtG13iRfxYUZMTNwUqb-IgA8Pknodp9SRVZwLCP1pMxLlr_20FCpZfZWauZMWBsr12RhRc7mLXWS0plwdT7c7Tkk7iQl6GPusT7E0-3omnuPUJkkTl0cIRdNeiWR1OWN3DKQxIdWCAuUcL6SD7Ivw8NTzEvwIAz7DzqPd-iLA5G2xl6SSmM0rsJxo2ncpMc5aj1pg2HzXlG3_ySbr1zkbcZGM3NsfVdPIJhRwvAkCk8qy4Z4uuXZaHHDdtdmeO8KBL_KHU1Z0AkdXiGUka0PjHoy21Cw0IFpadq4lcFHGVA9nmCa7De89WO8IaV70FE9qQ6s8Xxi1VyajA",
			"bucket": "مثال على اسم المستودع : جني الخدمة",
			"region": "مثال على منطقة الجرافة : ap-south-1"
		}
	},
	"imageUploadPost": {
		"200": {
			"message": "نجاح.",
			"description": "سيحصل المستخدم على رمز التصفح المتخفي"
		},
		"500": {
			"message": "internal server error  from imageUploadPost api",
			"description": "خطأ في الخادم الداخلي "
		},
		"description": "This api is used to upload image s3 or server",
		"notes": "This api return uploaded image url.",
		"payload": {
			"uploadTo": "تحميل الصورة 1: Aws-s3 2: مثال الخادم: 1",
			"folder": "مثال على اسم المجلد: العميل",
			"file": "مثال على بيانات الصور المتعددة : ",
			"fileName": "اسم الملف المستخدم لتحميل نفس الاسم لتحميله إذا كان فارغا ، فعندئذ بشكل افتراضي الطابع الزمني خلاف ذلك  : 1580901123540"
		},
		"responseDescription": {
			"imageUrl": "مثال على عنوان URL للصورة التي تم تحميلها : https://servicegenie.s3.ap-south-1.amazonaws.com/IMG_1580386465.png"
		}
	},
	"imageUploadDelete": {
		"200": {
			"message": "نجاح.",
			"description": "تم حذف الصورة بنجاح"
		},
		"500": {
			"message": "internal server error  from imageUploadDelete api",
			"description": "خطأ في الخادم الداخلي "
		},
		"description": "This api is used to delete image s3 or server",
		"notes": "This api delete image url.",
		"payload": {
			"uploadTo": "حذف الصورة 1: Aws-s3 2: مثال الخادم: 1",
			"fileUrl": "عنوان URL للملف لحذف الصورة"
		},
		"responseDescription": {
			"imageUrl": "مثال على عنوان URL للصورة التي تم تحميلها : https://servicegenie.s3.ap-south-1.amazonaws.com/IMG_1580386465.png"
		}
	},
	"patchordernau": {
		"fields": {
			"orderId": "مجموعة من معرف طلب المنتج .",
			"status": "الحالة للتحديث 2-مقبول (إلغاء انتقاء ، إلغاء إزالة) ، 3-إزالة ، 7-اختيار."
		},
		"response": {
			"200": "نجاح.",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على الطلب.",
			"500": "patchordernau.الاستجابة.500"
		},
		"responseDescription": {
			"200": "استجابة النجاح عند تحديث الحالة بنجاح.",
			"403": "عندما يتم تحديث الحالة بالترتيب بالفعل.",
			"404": "عندما لا يتم العثور على النظام فيdb."
		},
		"description": "API for Patch order Nau",
		"notes": "Nau patch order api"
	},
	"managerlocation": {
		"description": "This Api is use to update manager location that manager is online.",
		"notes": "تحديث موقع المدير"
	},
	"orderReminder": {
		"fields": {
			"orderId": "معرف الطلب الرئيسي النشط الذي يريد المستخدم إنشاء تذكير له",
			"days": "اليوم المحدد من قبل المستخدم للتذكير على سبيل المثال الأحد ، الاثنين ، الثلاثاء ، الأربعاء ، الخميس ، الجمعة ، السبت",
			"daysSelected": "ترتيب الأيام التي حددها المستخدم"
		},
		"response": {
			"200": "تم إنشاء التذكير بنجاح.",
			"403": "لا يمكن إنشاء تذكير للطلبات السابقة.",
			"404": "لم يتم العثور على الطلب."
		},
		"responseDescription": {
			"200": "عندما يتم إرسال التذكير بنجاح",
			"403": "عند اكتمال الطلب.",
			"404": "معرف طلب خاطئ معطى"
		},
		"description": "API for creating reminder for active order.",
		"notes": "سيكون معرف الطلب هو معرف الطلب الرئيسي."
	},
	"walletRecharge": {
		"fields": {
			"onlinePaymentMethod": "طريقة الدفع المستخدمة للدفع 1-بطاقة شريطية ، 2-RazorPay ، 3-CashFree ، شراء 4 في التطبيق ، دفع مثالي 5 شرائط ، دفع 6 مفتوح ، دفع 7-كوشكي ، 8-كوشكي تدفق دفع جديد..",
			"cardId": "معرف البطاقة الذي تم تحديده للرسوم",
			"currency": "عملة مثل INR والدولار الأمريكي",
			"amount": "المبلغ المطلوب شحن البطاقة وإضافته إلى المحفظة",
			"deviceSessionId": "معرف الجهاز الذي تم إنشاؤه بواسطة أداة مكافحة الاحتيال."
		},
		"response": {
			"200": "إعادة شحن المحفظة"
		},
		"responseDescription": {
			"200": "عند الانتهاء من إعادة شحن المحفظة"
		},
		"description": "Api for wallet recharge",
		"notes": "سيكون معرف البطاقة من الشريط",
		"addCredit": "إعادة شحن المحفظة باستخدام %s"
	},
	"orderPatchReattempt": {
		"description": "API for reattempt for delivery order",
		"notes": "-- --",
		"fields": {
			"storeOrderId": "معرف طلب المتجر لإعادة المحاولة",
			"packageId": "معرف الحزمة لإعادة المحاولة",
			"jobId": "معرف الوظيفة لإعادة المحاولة",
			"reason": "سبب إعادة محاولة التسليم"
		},
		"response": {
			"200": "بدء إعادة محاولة الأمر.",
			"403": "لا يمكن إعادة المحاولة، تم الوصول إلى الحد الأقصى لإعادة محاولة التسليم.",
			"404": "لم يتم العثور على الطلب",
			"410": "لا يمكن إعادة المحاولة، لا يسمح بإعادة المحاولة."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود",
			"405": "غير مسموح",
			"410": "غير مسموح"
		}
	},
	"orderPatchReturn": {
		"description": "API for return order",
		"notes": "-- --",
		"fields": {
			"returnType": "نوع الإرجاع 1-مكتمل ، 2-جزئي.",
			"storeOrderId": "معرف طلب المتجر للإرجاع",
			"packageId": "معرف الحزمة للإرجاع",
			"productOrderId": "معرف طلب المنتج للإرجاع في حالة الإرجاع الجزئي",
			"quantity": "معرف طلب المنتج للإرجاع في حالة الإرجاع الجزئي",
			"reason": "سبب إرجاع المنتج"
		},
		"response": {
			"200": "بدأ إرجاع الطلب.",
			"403": "معرف طلب المنتج المقدم غير مرتبط بالطرد.",
			"404": "لم يتم العثور على الطلب",
			"405": "الكمية غير صالحة.",
			"410": "لا يمكن إرجاعها، لا يسمح بإرجاع المنتج."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود",
			"405": "غير مسموح",
			"410": "غير مسموح"
		}
	},
	"postorder": {
		"description": "API for Placing a new order",
		"notes": "-- --",
		"fields": {
			"cartId": "معرف عربة التسوق الذي تريد الخروج منه.",
			"deviceSessionId": "معرف الجهاز الذي تم إنشاؤه بواسطة أداة مكافحة الاحتيال.",
			"paymentType": "طريقة الدفع المستخدمة للدفع 0-غير مؤكد 1-الدفع عبر الإنترنت ، 2-نقدا 3-حد الائتمان.",
			"onlinePaymentMethod": "Payment type used for checkout 0-Cash, 1-Stripe Card, 2-RazorPay, 3-CashFree, 4-In-APP Purchase, 5-Stripe Ideal Payment, 6-Open Pay, 7-Kushki Payment, 8-Kushki New Payment Flow.., 9-Paypal Version 2, 10-Ath-movil Payment, 11-Pay later, 12-Bank Transfer",
			"cardId": "معرف البطاقة إذا كانت طريقة الدفع هي 1.",
			"payByWallet": "إذا كان الخروج باستخدام محفظة منطقية (صواب / خطأ).",
			"promoId": "معرف العرض الترويجي للكوبون مطبق.",
			"coupon": "رمز القسيمة المستخدم في الدفع.",
			"discount": "يطبق الخصم عن طريق الكوبون.",
			"latitude": "الموقع من حيث تقديم الطلب.",
			"longitude": "الموقع من حيث تقديم الطلب.",
			"ipAddress": "عنوان IP الذي من خلاله وضع النظام.",
			"extraNote": "ملاحظات إضافية للطلب",
			"userId": "معرف المستخدم ينطبق فقط على المرسل.",
			"storeType": "Store Type 1-food, 2-grocery, 3-fashion, 4-sendPackages, 5-laundry, 6-pharmacy, 7-e-commerceAffiliate, 8-e-CommercePartner, 9-orderAnything, 10-Meat, 11-Liquor 12-grocery nau, 13- Cannabis, 23-Trucker",
			"requestedTimePickup": "وقت الاستلام المطلوب للطلب.",
			"requestedTime": "وقت التسليم المطلوب للطلب.",
			"pickup": {
				"object": "Pickup slot data.",
				"storeId": "معرف المتجر الذي تم تحديد الرحلة الخاصة به للاستلام. (0-متجر مركزي / برنامج تشغيل التطبيق)",
				"type": "نوع الاستلام ، 1-الآن ، 2-لاحقا حسب الوقت ، 3- لاحقا حسب الرحلة.",
				"requestedTime": "وقت الاستلام المطلوب للطلب.",
				"slotId": "معرف الرحلة للطلب المحدد للاستلام."
			},
			"delivery": {
				"object": "بيانات التسليم.",
				"storeId": "معرف المتجر الذي تم تحديد الرحلة للتسليم. (0-متجر مركزي / برنامج تشغيل التطبيق)",
				"productId": "معرف المنتج الذي تم تحديد الرحلة للتسليم.",
				"type": "نوع التسليم ، 1-الآن ، 2-لاحقا حسب الوقت ، 3- لاحقا حسب الرحلة.",
				"requestedTime": "وقت التسليم المطلوب للطلب.",
				"slotId": "معرف الرحلة للطلب المحدد للاستلام."
			},
			"orderImage": "صورة للطلب على سبيل المثال. وصفة طبية لطلب الصيدلية.",
			"orderType": "نوع الطلب 1-استلام ، 2-تسليم ، 3-قسيمة ، 4- إرجاع طلب 5-فيديو شوت ، 6-مكالمة فيديو ، 7-هوك أب.",
			"customerPaymentType": "نوع الدفع 1-مسبق الدفع ، 2- نقدا عند الاستلام.",
			"addressId": "معرف العنوان لعنوان التسليم.",
			"billingAddressId": "معرف العنوان لعنوان الفاتورة .",
			"storeId": "معرف المتجر الذي يضع الطلب (ناو).",
			"orderId": "معرف الطلب الرئيسي إذا تم تقديم الطلب بنجاح.",
			"guestEmail": "عنوان البريد الإلكتروني للضيوف للدفع",
			"guestMobile": "رقم هاتف الضيف للدفع",
			"guestCountryCode": "رمز بلد الضيف لرقم الهاتف المحمول",
			"contactLessDelivery": "توصيل بدون تواصل",
			"contactLessDeliveryReason": "سبب التسليم أقل اتصالا",
			"tip": "نصيحة للسائق.",
			"pickupSlotId": "معرف موقع الاستلام",
			"deliverySlotId": "معرف موقع التسليم",
			"numberOfBags": "عدد الحقائب",
			"deliveryFeePayBy": "1-المرسل ، 2-المستلم",
			"productId": "معرف المنتج",
			"payByRewardWallet": "إذا كان الدفع باستخدام محفظة المكافآت منطقيا (صواب / خطأ).",
			"inAppPlanId": "معرف خطة الشراء داخل التطبيق للطلب الافتراضي",
			"pGTxnId": "معرف معاملة خطة الشراء الافتراضية داخل التطبيق",
			"shopifyOrderId": "shopify Order Id",
			"isMultiCart": "1- عربة واحدة 2- عربة متعددة",
			"routeId": "معرف الطريق",
			"magentoOrderId": "معرف طلب مغناطيسي",
			"magentoUserToken": "رمز مستخدم مغناطيسي",
			"recepientId": "معرف المستخدم المستلم",
			"numberOfTrucks": "عدد المركبات",
			"isCard": "بطاقة لدفع رمز الاستجابة السريعة"
		},
		"response": {
			"200": "تم تقديم الطلب بنجاح.",
			"403": "يرجى إكمال طلبك النشط قبل تقديم طلب جديد.",
			"404": {
				"cart": "لم يتم العثور على عربة التسوق.",
				"slot": "لم يتم العثور على الرحلة.",
				"address": {
					"delivery": "لم يتم العثور على عنوان التسليم.",
					"billing": "لم يتم العثور على عنوان إرسال الفواتير."
				}
			},
			"405": "فتحة العداد ممتلئة.",
			"407": "تم تحديد رحلة غير صالحة.",
			"409": "بعض المنتجات غير متوفرة في المخزون ، يرجى مراجعة سلة التسوق الخاصة بك.",
			"410": "المتاجر التالية مغلقة، يرجى إزالة العناصر من هذه المتاجر والطلب مرة أخرى",
			"418": "لم تتم الموافقة على ملف تعريف هذا المستخدم بعد ، يرجى الاتصال بخدمة العملاء لمزيد من الاستفسارات.",
			"419": "invalid  Status Code from Shopify Order Post Apis",
			"420": "invalid  Status Code from Magento Order Post Apis",
			"410T": "المتجر مغلق ، يفتح بعد ذلك في ٪s",
			"410TM": "المتجر مغلق ، يفتح غدا في ٪s"
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود",
			"405": "غير مسموح",
			"407": "غير مسموح",
			"409": "بعض المنتجات غير متوفرة في المخزون ، يرجى مراجعة سلة التسوق الخاصة بك.",
			"410": "المتاجر التالية مغلقة، يرجى إزالة العناصر من هذه المتاجر والطلب مرة أخرى",
			"418": "غير مسموح",
			"419": "invalid  Status Code from Shopify Order Post Apis",
			"420": "invalid  Status Code from Magento Order Post Apis"
		}
	},
	"patchPayment": {
		"description": "API for change payment status",
		"notes": "-- --",
		"response": {
			"200": "تم تحديث الطلب بنجاح.",
			"404": "لم يتم العثور على الطلب."
		},
		"responseDescription": {
			"200": "نجاح",
			"404": "غير موجود"
		}
	},
	"patchOrderPick": {
		"fields": {
			"productOrder": {
				"object": "بيانات طلب المنتج.",
				"orderId": "معرف طلب المنتج لاختيار المنتج",
				"quantity": "يتم اختيار كمية المنتج."
			},
			"productImage": "صورة المنتج في حالة الانتقاء القسري.",
			"latitude": "الموقع من حيث تقديم الطلب.",
			"longitude": "الموقع من حيث تقديم الطلب.",
			"orderId": "معرف الطلب",
			"quantity": "الكمية",
			"barCodeData": {
				"pickType": "اختيار النوع 1 الممسوح ضوئيا ، 2 اليدوي ، 3 قوة اختيار",
				"sku": "sku got from bar code",
				"manufacturingDate": "تاريخ التصنيع حصلت من الباركود",
				"batchid": "معرف الدفعة التي تم الحصول عليها من الرمز الشريطي",
				"object": "بيانات الباركود لاختيار العناصر."
			}
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود",
			"405": "غير مسموح"
		},
		"description": "Api for pick order.",
		"notes": "اختر الطلب حسب معرف طلب المنتج."
	},
	"patchOrderPicking": {
		"fields": {
			"batchOrder": "تعيين دفعة أو تخزين النظام",
			"orderId": "معرف طلب المتجر أو معرف الدفعة",
			"orders": "مجموعة من الطلبات",
			"labelUrl": "عنوان URL للتسمية لملصقات الحقائب"
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على.",
			"405": "لا يسمح لك بالبدء في اختيار الطلب المقدم.",
			"409": "لا يمكن البدء في اختيار الطلب ، لقد بدأت بالفعل في اختيار طلب آخر."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود",
			"405": "غير مسموح",
			"409": "غير مسموح"
		},
		"description": "Api for start picking order.",
		"notes": "ابدأ في اختيار الطلب عن طريق المتجر معرف الطلب أو معرف الدفعة."
	},
	"patchAssignPicker": {
		"fields": {
			"batchOrder": "تعيين دفعة أو تخزين النظام",
			"orderId": "تخزين معرف الطلب أو دفعة لمنتقي التعيين",
			"pickerType": "نوع المنتقي 1-مدير ، 2-سائق",
			"pickerId": "معرف المنتقي"
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على.",
			"405": "برنامج تشغيل نوع المنتقي غير مسموح به مع تعيين دفعة."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود",
			"405": "غير مسموح"
		},
		"description": "Api for assign picker.",
		"notes": "تعيين منتقي لكل طلب متجر."
	},
	"patchAssignComptroller": {
		"fields": {
			"batchOrder": "تعيين دفعة أو تخزين النظام",
			"orderId": "تخزين معرف الطلب أو معرف الدفعة لتعيين المراقب المالي",
			"comptrollerId": "معرف المدير"
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"description": "Api for assign comptroller.",
		"notes": "تعيين مراقب لكل طلب متجر أو لكل دفعة."
	},
	"postBagScan": {
		"fields": {
			"batchOrder": "كيس المسح الضوئي للدفعة أو طلب التسليم.",
			"orderId": "معرف الحزمة أو معرف الدفعة لحقيبة المسح الضوئي.",
			"bagId": "معرف الحقيبة الذي يتم إدخاله يدويا أو مسحه ضوئيا."
		},
		"response": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "الحقيبة الممسوحة ضوئيا غير مرتبطة بالطلب المقدم ، يرجى التحقق.",
			"404": "لم يتم العثور على الطلب."
		},
		"description": "Api for scanning bags before dispatching.",
		"notes": "this api is for comptroller flow"
	},
	"patchAssignChecker": {
		"fields": {
			"batchOrder": "تعيين دفعة أو تخزين النظام",
			"orderId": "تخزين معرف الطلب أو معرف الدفعة لتعيين المدقق",
			"checkerId": "معرف المدير"
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"description": "Api for assign checker.",
		"notes": "تعيين مدقق لكل طلب متجر أو لكل دفعة."
	},
	"patchOrderChecking": {
		"fields": {
			"batchOrder": "ابدأ في التحقق من وجود دفعة أو لا",
			"orderId": "معرف طلب المتجر أو معرف الدفعة"
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"description": "Api for start checking order.",
		"notes": "ابدأ في التحقق من الطلب عن طريق المتجر معرف الطلب أو معرف الدفعة."
	},
	"patchAlertOrder": {
		"fields": {
			"storeOrderId": "معرف طلب المتجر.",
			"roleId": "4-منتقي ، 5-مدقق ، 6-مراقب"
		},
		"response": {
			"200": "نجاح.",
			"404": "لم يتم العثور على الطلب."
		},
		"responseDescription": {
			"200": "نجاح.",
			"404": "لم يتم العثور على الطلب."
		},
		"description": "إرسال تنبيه لإشعار الطلب.",
		"notes": "إرسال تنبيه لإشعار الطلب."
	},
	"patchUnAssignPicker": {
		"fields": {
			"orderId": "معرف طلب المتجر لمنتقي التعيين"
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"description": "Api for unassign picker.",
		"notes": "إلغاء تعيين المنتقي لكل طلب متجر."
	},
	"patchOrderPicked": {
		"fields": {
			"type": "نوع الطلب تريد إرسال تأكيد",
			"orderId": "معرف طلب المتجر أو معرف الطلب الرئيسي لاختيار جميع المنتجات",
			"latitude": "الموقع من حيث تقديم الطلب.",
			"longitude": "الموقع من حيث تقديم الطلب."
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود",
			"405": "غير مسموح"
		},
		"description": "Api for complete picking for store order.",
		"notes": "اختيار كامل للطلب عن طريق معرف طلب المتجر أو معرف الطلب الرئيسي."
	},
	"getOrderRoute": {
		"fields": {
			"limit": "تقييد السجلات ردا على ذلك",
			"skip": "أخذ السجلات بعد تخطي",
			"status": "1-في ملزمة ، 2-في مراقبة الجودة ، 3-جاهزة للاستلام ، 4 في الإرسال ، 5-مكتملة ، 6-ملغاة",
			"storeType": "0-all, 1-food, 2-grocery, 3-fashion, 4-sendPackages, 5-laundry, 6-pharmacy, 7-e-commerceAffiliate, 8-e-CommercePartner, 9-orderAnything, 10-Meat, 11-Liquor 12-grocery nau, 13- Cannabis, 23-Trucker",
			"storeCategoryId": "تخزين معرف الفئة لسجلات التصفية",
			"bookingType": "0-الكل ، 1-في أسرع وقت ممكن ، 2-الجدول حسب الوقت ، 3-الجدول حسب الرحلة ، 23-المجدول",
			"orderTime": "من التاريخ - إلى التاريخ (الطابع الزمني مفصول ب -) على سبيل المثال. (1578313576-1578313576)",
			"search": "البحث باستخدام نص على اسم العميل ورقمه وبريده الإلكتروني ومعرف الطلب المركزي",
			"count": "إجمالي السجلات مع المرشحات المقدمة",
			"data": "السجلات التي تم العثور عليها مع المرشحات المقدمة"
		},
		"response": {
			"200": "نجاح",
			"403": "You are not Allowed to call this api."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح"
		},
		"description": "الحصول على ترتيب الطريق عن طريق العاصمة.",
		"notes": "API is for DC manager"
	},
	"getOrderCountRoute": {
		"fields": {
			"status": "1 بوصة ملزمة ، 2 في مراقبة الجودة ، 3 في التسليم ، 4 مكتملة ، 5 ملغاة",
			"storeType": "0-all, 1-food, 2-grocery, 3-fashion, 4-sendPackages, 5-laundry, 6-pharmacy, 7-e-commerceAffiliate, 8-e-CommercePartner, 9-orderAnything, 10-Meat, 11-Liquor 12-grocery nau, 13- Cannabis, 23-Trucker",
			"storeCategoryId": "تخزين معرف الفئة لسجلات التصفية",
			"bookingType": "0-الكل ، 1-في أسرع وقت ممكن ، 2-الجدول حسب الوقت ، 3-الجدول حسب الرحلة ، 23-المجدول",
			"orderTime": "من التاريخ - إلى التاريخ (الطابع الزمني مفصول ب -) على سبيل المثال. (1578313576-1578313576)",
			"data": "عد مجموعة مع كل حالة"
		},
		"response": {
			"200": "نجاح",
			"403": "You are not Allowed to call this api."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح"
		},
		"description": "الحصول على ترتيب المسا عن طريق العاصمة.",
		"notes": "API is for DC manager"
	},
	"patchOrderRoute": {
		"fields": {
			"orderId": "معرف طلب DC",
			"status": "Stus to update for dc order 4-In-delivery, 5-Completed(in-case of last Hop)",
			"orderFrom": "طلب من 1 للتسليم على شبكة الانترنيت او 0 للمسؤول المباشر"
		},
		"response": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "You are not Allowed to call this api.",
			"404": "الحالة غير صالحة أو لم يتم العثور على الطلب."
		},
		"description": "api for update status for Ready for pickup order.",
		"notes": "api is only for DC for route flow."
	},
	"postOrderRouteReceipt": {
		"fields": {
			"orderId": "معرف طلب DC",
			"trackingId": "معرف التتبع الذي أدخله المستخدم"
		},
		"response": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود",
			"405": "تم تمرير معرف تتبع غير صالح."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "You are not Allowed to call this api.",
			"404": "الحالة غير صالحة أو لم يتم العثور على الطلب.",
			"405": "معرف تتبع غير صالح."
		},
		"description": "api for confirm receipt for inbound order.",
		"notes": "api is only for DC for route flow."
	},
	"postOrderRoute": {
		"fields": {
			"orderId": "معرف طلب DC",
			"status": "حالة QC , 31 مرت ، 32 فشلت",
			"autoMode": "وضع الإرسال تلقائي أو يدوي ، إذا كان يدويا ، فقم بتمرير شريك الشحن وتفاصيل التتبع.",
			"shippingPartnerId": "للحصول على معرف شريك الشحن للارسال اليدوي",
			"shippingPartnerName": "للحصول على اسم شريك شحن الارسال اليدوي",
			"trackingId": "لمعرف تتبع الارسال اليدوي",
			"trackingUrl": "لعنوان URL لتتبع الإرسال اليدوي",
			"shippingLabel": "عنوان URL لصورة ملصق الشحن",
			"estimateWeight": "الوزن للشحن",
			"estimateWeightUnit": "وحدة الوزن للشحن"
		},
		"response": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "You are not Allowed to call this api.",
			"404": "الحالة غير صالحة أو لم يتم العثور على الطلب."
		},
		"description": "api for update status for in QC order.",
		"notes": "api is only for DC for route flow."
	},
	"schedule": {
		"get": {
			"description": "Api for Get Schedule Details.",
			"notes": "This API allows user to get Schedule Details."
		},
		"slotGet": {
			"description": "Api for Get Scheduled Slot Details.",
			"notes": "This API allows user to Scheduled Slot Details."
		},
		"post": {
			"description": "Api for Add Schedule Details.",
			"notes": "This API allows user to add Schedule Details."
		},
		"put": {
			"description": "Api for change status of Schedule Details.",
			"notes": "This API allows user to change status of Schedule Details."
		},
		"delete": {
			"description": "Api for Delete Schedule Details.",
			"notes": "This API allows user to delete Schedule Details."
		},
		"slotDelete": {
			"description": "Api for Delete One perticular Slot Details.",
			"notes": "This API allows user to delete One perticular Slot Details."
		},
		"response": {
			"addNew": {
				"200": "اضيف بنجاح.",
				"409": "لقد قمت بالفعل بإنشاء جدول للفترة الزمنية المحددة."
			},
			"delete": {
				"200": "حذف الجدول بنجاح.",
				"410": "لا يمكن حذف هذا الجدول"
			},
			"get": {
				"200": "تم العثور على الجداول الزمنية",
				"404": "لم يتم العثور على الجداول"
			},
			"slotBook": {
				"404": "لم يتم العثور على الرحلة.",
				"409": "الرحلة محجوزة بالفعل."
			},
			"slotDelete": {
				"200": "تم حذف الرحلة بنجاح",
				"404": "لم يتم العثور على الرحلة",
				"410": "لا يمكن حذف هذه الرحلة ، الحجز موجود مقابل هذه الرحلة"
			}
		}
	},
	"patchOrderConfirm": {
		"fields": {
			"type": "نوع الطلب تريد تأكيده.",
			"orderId": "معرف طلب المنتج لاختيار المنتج",
			"confirm": "تأكيد أو إلغاء تأكيد.",
			"latitude": "الموقع من حيث تقديم الطلب.",
			"longitude": "الموقع من حيث تقديم الطلب."
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود",
			"405": "غير مسموح"
		},
		"description": "Api for confirm order.",
		"notes": "تأكيد الطلب عن طريق معرف طلب المنتج."
	},
	"postGetConfirmation": {
		"fields": {
			"type": "نوع الطلب تريد إرسال تأكيد",
			"orderId": "معرف الطلب الذي تريد إرسال تأكيد إلى العميل",
			"reason": "سبب الحصول على تأكيد"
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"description": "Api for sending confirmation to customer.",
		"notes": "سيكون تحديد الطلب حسب نوع الطلب ومعرف الطلب المرسل في الشحنة."
	},
	"patchOrderReview": {
		"fields": {
			"orderId": "معرف طلب المنتج لاستئناف الطلب"
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"description": "Api for accept review of product order.",
		"notes": "قبول طلب المراجعة سيكون عن طريق معرف طلب المنتج المرسل في الشحنة."
	},
	"postSelfPickupStatus": {
		"fields": {
			"orderId": "معرف طلب المتجر لتحديث الحالة",
			"receiverName": "اسم المستلم",
			"receiverCountryCode": "رمز البلد",
			"receiverMobile": "رقم الهاتف",
			"carType": "نوع السيارة",
			"carColor": "لون السيارة",
			"makeModel": "الصنع والنوع",
			"platNumber": "رقم اللوحة"
		},
		"response": {
			"200": "نجاح",
			"403": "طلبك غير جاهز للاستلام حتى الآن ، يرجى الاتصال بالمتجر في حالة وجود أي استفسارات عبر خيار الاتصال أو الدردشة مع المتجر.",
			"404": "لم يتم العثور على الطلب."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"description": "Api for self pickup order status update by customer.",
		"notes": "سيقوم العميل بتحديث هذه الحالة عندما يكون العميل في المتجر."
	},
	"postOrderResubmit": {
		"fields": {
			"type": "نوع الطلب الذي تريد إعادة إرساله",
			"orderId": "معرف الطلب لاستئناف الطلب",
			"orderImage": "صورة للطلب على سبيل المثال. وصفة طبية لطلب الصيدلية.",
			"extraNote": "ملاحظات إضافية للطلب"
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"description": "Api for resubmit order by updating order images.",
		"notes": "إعادة تقديم الطلب سيكون حسب نوع الطلب ومعرف الطلب المرسل في الشحنة."
	},
	"patchOrderReceipt": {
		"fields": {
			"batchOrder": "إيصال طلب دفعة أو مخزن",
			"orderId": "معرف طلب المتجر لتحديث الإيصال",
			"imageUrl": "صورة للاستلام.",
			"latitude": "الموقع من حيث تقديم الطلب.",
			"longitude": "الموقع من حيث تقديم الطلب."
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"description": "Api for upload receipt for order.",
		"notes": "سيتم تحميل الإيصال عن طريق معرف طلب المتجر."
	},
	"getOrderReceipt": {
		"fields": {
			"orderId": "معرف طلب المتجر لتحديث الإيصال",
			"receciptURL": "صور للاستلام."
		},
		"response": {
			"200": "نجاح",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"404": "غير موجود"
		},
		"description": "Api for get uploaded receipt for order.",
		"notes": "ستكون الإيصالات التي تم تحميلها عن طريق معرف طلب المتجر."
	},
	"patchOrderMissing": {
		"fields": {
			"orderId": "معرف طلب المنتج الذي تريده للمنتج مفقود",
			"quantity": "الكمية المراد وضع علامة عليها كمفقودة."
		},
		"response": {
			"200": "نجاح",
			"403": "لا يمكن تحديث المنتج على أنه مفقود ، المنتج في حالة مختلفة.",
			"404": "لم يتم العثور على الطلب"
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"description": "API for mark product as missing in checkout stage",
		"notes": "API will be called when checking the products of order."
	},
	"patchOrderGenerateLable": {
		"fields": {
			"batchOrder": "علم طلب دفعة ل NAU",
			"orderId": "معرف طلب المتجر لتحديث الإيصال",
			"bags": "عدد الأكياس لتوليد الملصق.",
			"latitude": "الموقع من حيث تقديم الطلب.",
			"longitude": "الموقع من حيث تقديم الطلب.",
			"shippingLabel": "عنوان URL لملصق الشحن الذي تم إنشاؤه",
			"bagsArray": "مجموعة من معرف الحقيبة والملصق",
			"bagId": "معرف الحقيبة الذي تم إنشاؤه للحقيبة",
			"lable": "عنوان URL لملصق الشحن الذي تم إنشاؤه"
		},
		"response": {
			"200": "نجاح",
			"403": "الحالة غير صحيحة.",
			"404": "لم يتم العثور على."
		},
		"responseDescription": {
			"200": "نجاح",
			"403": "غير مسموح",
			"404": "غير موجود",
			"405": "غير مسموح"
		},
		"description": "Api for generating lable for each bag.",
		"notes": "سيكون إنشاء الملصق عن طريق معرف طلب المتجر."
	},
	"patchOrderGeneratePaymentCode": {
		"fields": {
			"orderId": "معرف طلب المتجر لإنشاء رمز الدفع",
			"barCodeUrl": "عنوان URL للرمز الشريطي الذي تم إنشاؤه من Open Pay",
			"data": "هدف البيانات"
		},
		"response": {
			"200": "نجاح.",
			"403": "عنوان URL الذي تم إنشاؤه بالفعل أو الدفع المفتوح غير ممكن.",
			"404": "لم يتم العثور على الطلب."
		},
		"responseDescription": {
			"200": "Suceess",
			"403": "غير مسموح",
			"404": "غير موجود"
		},
		"description": "APi for generating payment code for openpay by order id.",
		"notes": "إنشاء رمز الدفع مخصص فقط للدفع المفتوح."
	},
	"storeType": {
		"response": {
			"200": "نجاح."
		},
		"responseDescription": {
			"200": "احصل على قائمة أنواع المتجر"
		},
		"get": {
			"description": "Api for get all store Type in admin and dispatcher",
			"notes": "Api for get all store Type in admin and dispatcher"
		}
	},
	"storeFrontType": {
		"response": {
			"200": "نجاح."
		},
		"responseDescription": {
			"200": "احصل على قائمة نوع واجهة المتجر"
		},
		"get": {
			"description": "Api for get all store Front Type in admin and dispatcher",
			"notes": "Api for get all store Front Type in admin and dispatcher"
		}
	},
	"providerPostVehicleDefault": {
		"404": "لم يتم العثور على السيارة.",
		"411": "السيارة غير متوفرة.",
		"412": "لا يمكنك تغيير نوع سيارتك إذا كنت تقوم بالحجز حاليا ، يرجى إكمال حجوزاتك الحالية النشطة لتغيير نوع السيارة"
	},
	"accountsError": {
		"200": "تم التحقق من البريد الإلكتروني بنجاح.",
		"404": "لم يتم العثور على بيانات المستخدم .",
		"405": "البريد الإلكتروني جاهز بالكامل تم التحقق منه.",
		"408": "انتهت صلاحية هذا الرابط."
	},
	"email": {
		"newSignUp": "مرحبا بكم في ٪s!",
		"instituteNewSignUp": "تحقق من بريدك الإلكتروني على ٪s!",
		"newContactRequest": "طلب اتصال جديد.",
		"profileAccepted": "%s تم قبول الملف الشخصي.",
		"walletRechargeSuccess": "إعادة شحن المحفظة !",
		"walletRechargeFailed": "المحفظة غير معاد شحنها !",
		"profileInstituteAccepted": "ملف تعريف المشتري التجاري مقبول على ٪s.",
		"profileRejected": "%s تم رفض الملف الشخصي.",
		"profileInstituteRejected": "تم رفض ملف تعريف المشتري التجاري على ٪s.",
		"profileBanned": "%s تم حظر الملف الشخصي.",
		"profileSuspend": "%s تم تعليق الملف الشخصي.",
		"profileDeleted": "%s تم حذف الملف الشخصي",
		"profileStoreAccepted": "%s تم قبول ملف تعريف المتجر.",
		"profileStoreRejected": "%s تم رفض ملف تعريف المتجر.",
		"profileStoreBanned": "%s تم حظر ملف تعريف المتجر.",
		"profileStoreSuspend": "%s تم تعليق ملف تعريف المتجر.",
		"profileStoreDeleted": "%s تم حذف ملف تعريف المتجر",
		"profileOperatoreAccepted": "%s تم قبول ملف تعريف المشغل.",
		"profileOperatoreRejected": "%s تم رفض ملف تعريف المشغل.",
		"profileOperatoreBanned": "%s تم حظر ملف تعريف المشغل.",
		"profileOperatoreSuspend": "%s تم تعليق ملف تعريف المشغل.",
		"profileOperatoreDeleted": "%s تم حذف ملف تعريف المشغل",
		"passwordReset": "%s إعادة تعيين كلمة المرور.",
		"passwordResetButton": "إعادة تعيين كلمة المرور الخاصة بي",
		"addressChangeRequest": "تأكيد البريد الإلكتروني الجديد على ٪s",
		"verifyButton": "تحقق من بريدك الإلكتروني",
		"deliveryThanks": "تم تسليم طلبك٪ s. شكرا لك على استخدام ٪s!",
		"manageOrders": "إدارة الطلبات",
		"dispatchThanks": "تم إرسال طلبك٪ s. شكرا لك على استخدام ٪s!",
		"arrivingThanks": "المنتج معبأ وخارج للتسليم!",
		"trackOrderButton": "تتبع طلبك هنا",
		"driverAccepted": "يتم قبول ملف تعريف السائق الخاص بك في ٪s",
		"driverRejected": "تم رفض ملف تعريف الشريك السائق عند ٪s",
		"driverSuspended": "تم تعليق ملف تعريف السائق الخاص بك عند ٪s",
		"driverDeleted": "تم حذف ملف تعريف السائق الخاص بك عند ٪s",
		"driverSigningUpThanks": "شكرا لك على التسجيل كسائق في ٪s",
		"roleManagerDetails": "تفاصيل تسجيل الدخول لمدير الأدوار في ٪s",
		"sellerCancelledOrder": "رقم الطلب: تم إلغاء ٪s من قبل البائع",
		"sellerCancelledOrderFood": "ألغى المطعم خدمة التوصيل.",
		"customerCancelledOrder": "رقم الطلب : تم إلغاء ٪s من قبل العميل",
		"cancelledOrder": "لقد قمت بإلغاء الطلب لا ٪s",
		"cancelledOrderFood": "لقد ألغيت التسليم الخاص بك.",
		"msgCancelledOrder": "ألغى ٪s رقم الطلب ٪s مع السبب ٪s.",
		"msgCancelledOrderUser": "لقد قمت بإلغاء رقم الطلب    ٪s مع السبب ٪s.",
		"msgCancelledOrderProduct": "لقد رفضت العنصر من رقم الطلب ٪s مع السبب ٪s.",
		"msgRejected": "رفض ٪s ٪s مع السبب ٪s.",
		"msgItemRemoved": "تمت إزالة العنصر من رقم الطلب  ٪s.",
		"msgItemRemovedReason": "تمت إزالة العنصر من الطلب no٪s مع السبب٪ s.",
		"msgRejectedItems": "%s رفض بعض العناصر في طلبك لا ٪s مع السبب %s.",
		"msgThanks": "%s شكرا لاستخدامك  %s!",
		"msgReplacedProduct": "تم استبدال منتج في قائمة التسوق الخاصة بك ، يرجى مراجعة.",
		"msgRecommendedItem": "تمت التوصية بعنصر جديد ، يرجى المراجعة.",
		"msgSubmittedOrder": "تم تقديم طلبك٪ s. شكرا لاستخدامك ٪s!",
		"msgReceivedOrder": "أمر الشراء الجديد المستلم: ٪s. شكرا لاستخدامك   ٪s!",
		"rewardPointsUnlocked": "نقاط المكافآت غير مقفلة",
		"rewardpointsExpired": "انتهت صلاحية نقاط المكافآت",
		"rewardPointsAboutToExpire": "نقاط المكافآت على وشك الانتهاء",
		"profileCustomerApprove": "%s تمت الموافقة على الملف الشخصي.",
		"profileCustomerReject": "%s تم رفض الملف الشخصي.",
		"startBuyNow": "ابدأ الشراء الآن!",
		"donationQueries": "استعلام المشروع من %s",
		"projectIdea": "طلب فكرة مشروع",
		"thanksforOrdering": "شكرا للطلب,",
		"foodDelivered": "شكرا لك على تقديم طلبك مع ٪s! تم تسليم طلبك.",
		"orderDeliveredCentral": "شكرا لك على طلبك. تم تسليم الطلب بنجاح.",
		"orderDelivered": "تم تسليم الطلب بنجاح",
		"orderDeliveredSub": "تم تسليم طلبك٪ s. شكرا لك على استخدام ٪s!",
		"truckOrderDC": "تأكيد التسليم - تم تسليم الشحنة ٪s الخاصة بك!",
		"orderIndexKeyName": "إجمالي الطلب",
		"itemSubtotal": "المجموع الفرعي للعنصر",
		"shippingHandling": "شحن وتسليم",
		"promotionApplied": "الترويج المطبق",
		"tax": "ضريبة",
		"payBalance": "دفع الرصيد",
		"orderDispatchedCentral": "شكرا لك على طلبك. الطلب الآن خارج للتسليم.",
		"orderDispatched": "تم إرسال الطلب بنجاح",
		"orderDispatchedSub": "تم إرسال طلبك٪ s. شكرا لك على استخدام ٪s!",
		"foodOrderAccepted": "شكرا لك على تقديم طلبك مع ٪s! تم قبول طلبك.",
		"foodOrderAcceptedSub": "تم قبول طلبك ٪s من قبل ٪s!",
		"removedByPickerSub": "تمت إزالة المنتج بواسطة المنتقي - تم تحديث سلة التسوق",
		"cartUpdated": "تم تحديث عربة التسوق بنجاح",
		"rejectedByStore": "المنتج (المنتجات) المرفوضة من قبل المتجر",
		"orderCancelled": "تم إلغاء الطلب!",
		"orderSubmitted": "تم إرسال طلبك بنجاح.",
		"orderConfirmed": "تم تأكيد الطلب بنجاح",
		"orderConfirmedSub": "تم تقديم طلبك٪ s. شكرا لك على استخدام ٪s!",
		"foodOrdered": "شكرا لك على تقديم طلبك مع ٪s! تم تقديم طلبك.",
		"purchaseOrder": "أمر شراء جديد تم استلامه: ٪s. شكرا لك على استخدام ٪s!",
		"profileInstituteSuspended": "Your enterprise account is Suspended on %s.",
		"activateSuspendAccountInstitutionProfile": "Your enterprise account is active again on %s.",
		"roleTeamMemberDetails": "Team member account created on %s",
		"returnInitiated": "Order return Initiated",
		"storeCustomerInvitationCreate": "%s has added you as a buyer on %s",
		"deleteCustomerInvitation": "%s has unlinked your as a buyer on %s"
	},
	"rideBookingStatusText": {
		"1": "جديد",
		"2": "تم القبول ",
		"3": "تم إلغاء الطلب",
		"4": "تم إلغاء العميل",
		"5": "تم إلغاء السائق",
		"6": "السائق في الطريق",
		"7": "وصل السائق",
		"8": "بدأ التحميل",
		"9": "بدأت الرحلة",
		"10": "تم الوصول إلى نقطة الموقع",
		"11": "الغاء تحميل",
		"12": "منجز",
		"13": "انتهت صلاحية الحجز"
	},
	"deliveryBookingStatusText": {
		"0": "في انتظار الدفع",
		"1": "جديد",
		"2": "تم القبول ",
		"3": "الغاء",
		"4": "معبأة وجاهزة",
		"5": "جاهز للاستلام",
		"6": "في ارسال",
		"7": "تم التوصيل",
		"8": "اختار",
		"9": "في انتظار التأكيد",
		"10": "قيد المراجعة",
		"11": "اختيار ",
		"12": "بدأت العودة",
		"13": "اكتملت العودة",
		"14": "جاهز للاستلام الذاتي",
		"15": "وصل العميل",
		"16": "مرفوض",
		"17": "قيد التقديم",
		"18": "منتقي المعين"
	},
	"driverJobsBookingStatusText": {
		"0": "في انتظار الدفع",
		"1": "جديد",
		"2": "تم القبول ",
		"3": "في الطريق للاستلام ",
		"4": "عند الاستلام ",
		"5": "اختار",
		"6": "في الطريق الى الموقع ",
		"7": "في الموقع",
		"8": "منجز",
		"9": "في انتظار التأكيد",
		"10": "قيد المراجعة",
		"11": "اختيار ",
		"12": "بدأت العودة",
		"13": "اكتملت العودة",
		"14": "جاهز للاستلام الذاتي",
		"15": "بدأ التحميل",
		"16": "بدأ التفريغ"
	},
	"orderTranslation": {
		"jobForRide": "اركب",
		"jobForDelivery": "تسليم",
		"jobForTowme": "سحب"
	},
	"storeTypeMsg": {
		"1": "طعام",
		"2": "البقاله",
		"3": "ازياء",
		"4": "إرسال الطرود",
		"5": "غسيل جاف",
		"6": "صيدلية",
		"7": "التجارة الإلكترونيةالتابعة",
		"8": "شريك التجارة الإلكترونية",
		"9": "اطلب أي شيء",
		"10": "لحم",
		"11": "مشروبات الكحولية ",
		"12": "بقالة nau",
		"13": "الحشيش ",
		"23": "سائق الشاحنه"
	},
	"bookingTypeMsg": {
		"0": "كل",
		"1": "اسرع مايمكن",
		"2": "الجدول الزمني حسب الوقت",
		"3": "الجدول الزمني حسب الرحلة",
		"23": "مجدولة"
	},
	"towingServices": {
		"get": {
			"description": "Api for Get Towing Services.",
			"notes": "This API allows user to get ."
		},
		"getAll": {
			"description": "Api for Get All Towing Services.",
			"notes": "This API allows user to get all Towing Services."
		},
		"post": {
			"description": "Api for Add Towing Services.",
			"notes": "This API allows user to add Towing Services."
		},
		"patch": {
			"description": "Api for Edit Towing Services.",
			"notes": "This API allows user to edit Towing Services."
		},
		"delete": {
			"description": "Api for Delete Towing Services.",
			"notes": "This API allows user to delete Towing Services."
		},
		"response": {
			"404": "لم يتم العثور على ، حدد بحثك"
		},
		"responseDescription": {
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة."
		}
	},
	"commodities": {
		"get": {
			"description": "Api for Get Commodities.",
			"notes": "This API allows user to get ."
		},
		"getAll": {
			"description": "Api for Get All Commodities.",
			"notes": "This API allows user to get all Commodities."
		},
		"post": {
			"description": "Api for Add Commodities.",
			"notes": "This API allows user to add Commodities."
		},
		"patch": {
			"description": "Api for Edit Commodities.",
			"notes": "This API allows user to edit Commodities."
		},
		"delete": {
			"description": "Api for Delete Commodities.",
			"notes": "This API allows user to delete Commodities."
		},
		"response": {
			"404": "لم يتم العثور على ، حدد بحثك"
		},
		"responseDescription": {
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة."
		}
	},
	"patchBaglabel": {
		"fields": {
			"storeOrderId": "معرف طلب المتجر"
		},
		"response": {
			"200": "نجاح",
			"404": "لم يتم العثور على المعلومات"
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"404": "لم يتم العثور على المعلومات"
		},
		"description": "Api is use to update baglable Count.",
		"notes": "Api is use to update baglable Count."
	},
	"sendPackageType": {
		"get": {
			"description": "Api for Get Send Package Type.",
			"notes": "This API allows user to get ."
		},
		"getAll": {
			"description": "Api for Get All Send Package Type.",
			"notes": "This API allows user to get all Send Package Type."
		},
		"post": {
			"description": "Api for Add Send Package Type.",
			"notes": "This API allows user to add Send Package Type."
		},
		"patch": {
			"description": "Api for Edit Send Package Type.",
			"notes": "This API allows user to edit Send Package Type."
		},
		"delete": {
			"description": "Api for Delete Send Package Type.",
			"notes": "This API allows user to delete Send Package Type."
		},
		"response": {
			"404": "لم يتم العثور على ، حدد بحثك"
		},
		"responseDescription": {
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة."
		}
	},
	"getStoreCategoryAddress": {
		"response": {
			"404": "الفئة غير موجودة."
		},
		"responseDescription": {
			"404": "الفئة غير موجودة."
		},
		"description": "احصل على فئة المتجر.",
		"notes": "احصل على فئة المتجر."
	},
	"containerType": {
		"responseDescription": {
			"404": "نوع الحاوية. وصف الاستجابة.404"
		},
		"response": {
			"404": "نوع الحاوية.استجابة.404"
		},
		"get": {
			"description": "الحصول على نوع الحاوية",
			"notes": "الحصول على نوع الحاوية"
		},
		"getAll": {
			"description": "احصل على جميع أنواع الحاويات",
			"notes": "احصل على جميع أنواع الحاويات"
		},
		"post": {
			"description": "Api for Add Send Container Type.",
			"notes": "This API allows user to add Send Container Type."
		},
		"patch": {
			"description": "Api for Edit Send Container Type.",
			"notes": "This API allows user to edit Send Container Type."
		},
		"delete": {
			"description": "Api for Delete Send Container Type.",
			"notes": "This API allows user to delete Send Container Type."
		}
	},
	"routes": {
		"response": {
			"404": "طرق"
		},
		"responseDescription": {
			"404": "Route builder API"
		}
	},
	"route": {
		"get": {
			"description": "احصل على تفاصيل منشئ المسار حسب المعرف.",
			"notes": "احصل على تفاصيل منشئ المسار حسب المعرف"
		},
		"getAll": {
			"description": "احصل على جميع تفاصيل منشئ المسار.",
			"notes": "احصل على جميع تفاصيل منشئ المسار"
		},
		"post": {
			"description": "Api for Add Route builder Details.",
			"notes": "This API allows user to add Route builder details."
		},
		"patch": {
			"description": "Api for Edit Route builder Details.",
			"notes": "This API allows user to edit Route builder details."
		},
		"delete": {
			"description": "Api for Delete Route builder Details.",
			"notes": "This API allows user to delete Route builder details."
		}
	},
	"idProofTypes": {
		"response": {
			"404": "لم يتم العثور على أنواع إثبات الهوية"
		},
		"responseDescription": {
			"404": "لم يتم العثور على أنواع إثبات الهوية"
		},
		"get": {
			"description": "This api is use to get idProofTypes",
			"notes": "This api is use to get idProofTypes"
		}
	},
	"orderDocument": {
		"fields": {
			"packageId": "معرف الحزمة",
			"document": "عناوين URL للصور"
		},
		"description": "api to update idproof in delivery order",
		"notes": "api to update idproof in delivery order"
	},
	"magentoCustomer": {
		"post": {
			"description": "إضافة عميل للتكامل المغناطيسي",
			"notes": "إضافة عميل للتكامل المغناطيسي"
		},
		"postCustomerLogin": {
			"description": "يسمح للمستخدم بالحصول على رمز المستخدم",
			"notes": "يسمح للمستخدم بالحصول على رمز المستخدم"
		},
		"patch": {
			"description": "تحديث العميل للتكامل المغناطيسي",
			"notes": "تحديث العميل للتكامل المغناطيسي"
		},
		"delete": {
			"description": "حذف العميل للتكامل المغناطيسي",
			"notes": "حذف العميل للتكامل المغناطيسي"
		},
		"response": {
			"404": "لم يتم العثور على العميل",
			"412": "عنوان البريد الإلكتروني هذا مسجل لدينا بالفعل ، يرجى تجربة عنوان بريد إلكتروني مختلف."
		},
		"responseDescription": {
			"412": "عنوان البريد الإلكتروني هذا مسجل لدينا بالفعل ، يرجى تجربة عنوان بريد إلكتروني مختلف."
		}
	},
	"importroute": {
		"post": {
			"descriptions": "Api for import route",
			"notes": "This API allows create new import route"
		}
	},
	"zoneAlert": {
		"get": {
			"description": "احصل على تفاصيل تنبيه المنطقة بناء على معرف المنطقة.",
			"notes": "احصل على تفاصيل تنبيه المنطقة بناء على معرف المنطقة."
		},
		"response": {
			"404": "لم يتم العثور على تنبيه المنطقة"
		},
		"responseDescription": {
			"404": "لم يتم العثور على تنبيه المنطقة"
		},
		"getAll": {
			"description": "احصل على تنبيه المنطقة بناء على المنطقة.",
			"notes": "احصل على تنبيه المنطقة بناء على المنطقة."
		},
		"post": {
			"description": "API to add new zone alert.",
			"notes": "API to add new zone alert."
		},
		"patch": {
			"description": "API to update zone alert.",
			"notes": "API to update zone alert."
		},
		"delete": {
			"description": "API to DELETE and CLOSE zone alert.",
			"notes": "API to DELETE and CLOSE zone alert."
		}
	},
	"events": {
		"get": {
			"description": "Api to get Events based on event Id",
			"notes": "Api to get Events based on event Id"
		},
		"response": {
			"204": "لم يتم العثور على مستخدم عميل المدير.",
			"205": "لم يتم العثور على المدير.",
			"404": "لم يتم العثور على تفاصيل الأحداث",
			"405": "Appconfig not set amount for create store event.",
			"407": "ليس لدى المستخدم ما يكفي من العملات المعدنية ، لذا قم بتسجيل الدخول إلى التطبيق وشراء العملات المعدنية"
		},
		"responseDescription": {
			"204": "لم يتم العثور على مستخدم عميل المدير.",
			"205": "لم يتم العثور على المدير.",
			"404": "لم يتم العثور على تفاصيل الأحداث",
			"405": "Appconfig not set amount for create store event.",
			"407": "ليس لدى المستخدم ما يكفي من العملات المعدنية ، لذا قم بتسجيل الدخول إلى التطبيق وشراء العملات المعدنية"
		},
		"getAll": {
			"description": "Api to get Events based on store Id",
			"notes": "Api to get Events based on store Id"
		},
		"post": {
			"description": "إضافة أحداث جديدة في المتاجر",
			"notes": "إضافة أحداث جديدة في المتاجر"
		},
		"patch": {
			"description": "تحديث الأحداث في المتاجر",
			"notes": "تحديث الأحداث في المتاجر"
		},
		"patchFav": {
			"description": "اجعل الحدث مفضلا",
			"notes": "اجعل الحدث مفضلا"
		},
		"getFav": {
			"description": "احصل على الحدث المفضل",
			"notes": "احصل على الحدث المفضل"
		}
	},
	"project": {
		"get": {
			"description": "Api to get Project based on event Id",
			"notes": "Api to get Project based on event Id"
		},
		"response": {
			"404": "لم يتم العثور على تفاصيل المشروع"
		},
		"getQueries": {
			"description": "This API will be used to pull all the project queries on the admin panel.",
			"notes": "This API will be used to pull all the project queries on the admin panel."
		},
		"postQueries": {
			"description": "This API will allow the user to post a query to the project",
			"notes": "This API will allow the user to post a query to the project"
		},
		"responseDescription": {
			"404": "لم يتم العثور على تفاصيل المشروع"
		},
		"getAll": {
			"description": "Api to get Project based on store Id",
			"notes": "Api to get Project based on store Id"
		},
		"post": {
			"description": "إضافة مشروع جديد في المتاجر",
			"notes": "إضافة مشروع جديد في المتاجر"
		},
		"patch": {
			"description": "تحديث المشروع في المتاجر",
			"notes": "تحديث المشروع في المتاجر"
		},
		"patchFav": {
			"description": "اجعل الحدث مفضل",
			"notes": "اجعل الحدث مفضل"
		},
		"getFav": {
			"description": "احصل على مشروعك المفضل",
			"notes": "احصل على مشروعك المفضل"
		},
		"postdonation": {
			"description": "This API will be used to donate coins to the project.",
			"notes": "This API will be used to donate coins to the project."
		},
		"getdonation": {
			"description": "this API is used to get the donation logs",
			"notes": "this API is used to get the donation logs"
		}
	},
	"vehicels": {
		"post": {
			"description": "Api to Post New Vehicels",
			"notes": "Api to Post New Vehicels"
		},
		"get": {
			"description": "Api to get  Vehicels",
			"notes": "Api to Post get Vehicels"
		},
		"patch": {
			"description": "Api to update  Vehicels",
			"notes": "Api to Post update Vehicels"
		},
		"delete": {
			"description": "Api to delete  Vehicels",
			"notes": "Api to Post delete Vehicels"
		}
	},
	"projectJob": {
		"get": {
			"description": "Api to get Project Jobs based on event Id",
			"notes": "Api to get Project Jobs based on event Id"
		},
		"response": {
			"403": "الحد الأقصى للمستخدم هو التقدم للوظيفة.",
			"404": "لم يتم العثور على تفاصيل وظائف المشروع"
		},
		"responseDescription": {
			"403": "الحد الأقصى للمستخدم هو التقدم للوظيفة.",
			"404": "لم يتم العثور على تفاصيل وظائف المشروع"
		},
		"getAll": {
			"description": "Api to get Project Jobs based on store Id",
			"notes": "Api to get Project Jobs based on store Id"
		},
		"getApply": {
			"description": "This api is for getting applications for applied project jobs.",
			"notes": "This api is for getting applications for applied project jobs."
		},
		"post": {
			"description": "إضافة وظائف مشروع جديد في المتاجر",
			"notes": "إضافة وظائف مشروع جديد في المتاجر"
		},
		"postApply": {
			"description": "This api is for applying project jobs for user requests.",
			"notes": "This api is for applying project jobs for user requests."
		},
		"patch": {
			"description": "تحديث وظائف المشروع في المتاجر",
			"notes": "تحديث وظائف المشروع في المتاجر"
		},
		"delete": {
			"description": "حذف وظائف المشروع في المتاجر",
			"notes": "حذف وظائف المشروع في المتاجر"
		}
	},
	"projectNeed": {
		"get": {
			"description": "Api to get Project Need based on event Id",
			"notes": "Api to get Project Need based on event Id"
		},
		"response": {
			"403": "الحد الأقصى للمستخدم ينطبق على الحاجة.",
			"404": "لم يتم العثور على تفاصيل احتياجات المشروع"
		},
		"responseDescription": {
			"403": "الحد الأقصى للمستخدم ينطبق على الحاجة.",
			"404": "لم يتم العثور على تفاصيل احتياجات المشروع"
		},
		"getAll": {
			"description": "Api to get Project Need based on store Id",
			"notes": "Api to get Project Need based on store Id"
		},
		"post": {
			"description": "اضافة حاجة مشروع جديد في المتاجر",
			"notes": "اضافة حاجة مشروع جديد في المتاجر"
		},
		"postApply": {
			"description": "This api is for applying project needs for user requests.",
			"notes": "This api is for applying project needs for user requests."
		},
		"getApply": {
			"description": "This api is for getting applications for applied project needs.",
			"notes": "This api is for getting applications for applied project needs."
		},
		"patch": {
			"description": "تحديث حاجة المشروع في المتاجر",
			"notes": "تحديث حاجة المشروع في المتاجر"
		},
		"delete": {
			"description": "حذف حاجة المشروع في المتاجر",
			"notes": "حذف حاجة المشروع في المتاجر"
		}
	},
	"checkIns": {
		"get": {
			"description": "Api to get checking User Details for store.",
			"notes": "Api to get checking User Details for store."
		},
		"response": {
			"404": "لم يتم العثور على تفاصيل المستخدم"
		},
		"responseDescription": {
			"404": "لم يتم العثور على تفاصيل المستخدم"
		},
		"getAll": {
			"description": "Api to get checking User for store.",
			"notes": "Api to get checking User for store."
		},
		"post": {
			"description": "Api to ADD checking User Details for store.",
			"notes": "Api to ADD checking User Details for store."
		}
	},
	"shiftTimings": {
		"response": {
			"404": {
				"shiftTimings": "لم يتم العثور على بيانات توقيتات التحول"
			}
		},
		"get": {
			"description": "Api To get shiftTimings data based on store ID",
			"notes": "Api To get shiftTimings data based on store ID"
		},
		"post": {
			"description": "Api To Add shiftTimings data based on store ID",
			"notes": "Api To Add shiftTimings data based on store ID"
		},
		"delete": {
			"description": "Api To delete shiftTimings data",
			"notes": "Api To delete shiftTimings data"
		},
		"getDetails": {
			"description": "Api to get shift timing details based on shift timing id.",
			"notes": "Api to get shift timing details based on shift timing id."
		}
	},
	"shift": {
		"get": {
			"description": "Api to get shift for stores.",
			"notes": "Api to get shift for stores."
		},
		"post": {
			"description": "Api to add new shift in shift timings.",
			"notes": "Api to add new shift in shift timings."
		},
		"response": {
			"404": {
				"shifts": "لم يتم العثور على بيانات التحول"
			}
		},
		"patch": {
			"description": "Api to update maximum number of job in shifts.",
			"notes": "Api to update maximum number of job in shifts."
		},
		"delet": {
			"description": "Api to delete shift from store",
			"notes": "Api to delete shift from store"
		}
	},
	"managercoins": {
		"response": {
			"404": "لم يتم العثور على بيانات المدير"
		},
		"responseDescription": {
			"404": "لم يتم العثور على بيانات المدير"
		},
		"get": {
			"description": "Api to get storeUser Coin balance.",
			"notes": "Api to get storeUser Coin balance."
		}
	},
	"walletTransaction": {
		"cardDeduct": "خصم البطاقة للطلب- %s",
		"cashCollected": "المبالغ النقدية المحصلة للطلب- %s",
		"pgEarning": "كسب PG للطلب- %s",
		"storeEarning": "كسب المتجر للطلب- %s",
		"appEarningCart": "عمولة التطبيق للطلب: #٪ s ، الحزمة: #٪ s",
		"deliveryFeeFromStoreEntry": "رسوم الشحن المدفوعة للطلب رقم: ٪s ومعرف الحزمة: ٪s",
		"driverEarning": "كسب السائق للطلب- ٪s",
		"referralEarning": "لقد ربحت للتو ٪s ٪s كعمولة لرقم الطلب-****٪s الذي تم إجراؤه بواسطة ٪s.",
		"bonusPoint": "نقطة المكافأة المستخدمة للطلب- ٪s",
		"refund": "استرداد للطلب- ٪s",
		"charge": "رسوم الطلب- ٪s",
		"cancellation": "رسوم الإلغاء للطلب- ٪s",
		"rewardsPointsReturned": "نقاط المكافآت التي يتم إرجاعها بسبب إلغاء الطلب - ****٪",
		"coinUsed": "العملة المستخدمة في الحدث-****٪ s",
		"coinDebit": "عملة الخصم في مشروع التبرع-****٪ s",
		"coinCredit": "عملة الائتمان في مشروع التبرع-****٪s",
		"rewardsPointsUsed": "نقاط المكافآت المستخدمة في الطلب - ****٪",
		"lastDue": "آخر مستحق مدفوع مع الطلب- ٪s",
		"order": "طلب",
		"event": "حدث",
		"projectDonation": "التبرع بالمشروع"
	},
	"paymentTypeText": {
		"onlinePayment": "الدفع عبر الإنترنت",
		"نقدي": "نقدي",
		"محفظة": "محفظة",
		"bonusPoint": "نقاط المكافأة",
		"البطاقة": "البطاقة"
	},
	"customerPaymentTypeMsg": {
		"cashOnDelivery": "الدفع عند الاستلام",
		"prePaid": "المدفوعه مسبقا"
	},
	"actCustomerPaymentTypeMsg": {
		"cashOnDelivery": "الدفع عند الاستلام",
		"prePaid": "المدفوعه مسبقا"
	},
	"deliveryFeePaidByText": {
		"receiver": "المستلم",
		"sender": "المرسل"
	},
	"customerNotification": {
		"profileApproved": "يسرنا إبلاغك بأن ملفك الشخصي قد تمت الموافقة عليه على ٪s. يمكنك الآن البدء في تقديم الطلبات.",
		"profileRejected": "نأسف لإبلاغك بأنه تم رفض ملفك الشخصي على ٪s. يرجى تحميل مجموعة جديدة من إثبات الهوية.",
		"productPicked": "منتجك (منتجاتك) في الحزمة رقم: تم استلام ٪s.",
		"productDelivered": "منتجك (منتجاتك) في الحزمة رقم: تم تسليم ٪s.",
		"readyForPickup": "منتجك (منتجاتك) جاهز للاستلام.",
		"readyForDelivery": "منتجك (منتجاتك) معبأ وجاهز للتسليم",
		"pickerAssigned": "تم تعيين المنتقي للطلب لا ٪s.",
		"pickingStarted": "بدأ المدير في اختيار الطلب بدون ٪s.",
		"checkingStarted": "بدأ المدقق الخاص بك في التحقق من طلبك.",
		"productPacked": "منتجك ٪s معبأ.",
		"orderPacked": "تم تعبئة طلبك.",
		"pickerPicked": "اختار المنتقي %s",
		"donePicking": "%s أكملت اختيار ودفع ثمن طلبك لا %s.",
		"pickerPicking": "بدأ منتقي ٪s في اختيار طلبك.",
		"reattemptDelivery": "الحزمة ٪s هي إعادة محاولة للتسليم.",
		"orderAccepted": "قبل المتجر الطلبات ٪s.",
		"orderRejected": "رفض المتجر الطلب مع السبب ٪s ، سيتم رد أي أموال مدفوعة.",
		"productReturn": "منتجك ٪s هو إرجاع.",
		"orderReturn": "تم إرجاع طلبك",
		"orderCreated": "تم تقديم طلبك٪ s. شكرا لك على استخدام ٪s!",
		"loadCreated": "تم إرسال التحميل ٪s الخاص بك. شكرا لك على استخدام ٪s!",
		"orderCreatedShouout": "لقد تلقيت طلب صيحة",
		"orderCreatedVideo": "لقد تلقيت طلب مكالمة فيديو.",
		"orderDenied": "تم رفض طلبك من قبل المتجر مع سبب ٪ s ، يرجى مراجعة طلبك",
		"orderCancle": "لقد اضطررنا إلى إلغاء هذا الطلب وقمنا برد الأموال إلى طريقة الدفع التي اخترتها."
	},
	"customerNotificationTitle": {
		"profileApproved": "تمت الموافقة على الملف الشخصي",
		"profileRejected": "تم رفض الملف الشخصي",
		"productDispatched": "تم إرسال المنتج",
		"productDelivered": "تم تسليم المنتج",
		"productPacked": "المنتج معبأة",
		"orderPacked": "النظام معبأة",
		"productOrdered": "المنتج المطلوب",
		"loadCreated": "تم إنشاء التحميل",
		"productPicked": "المنتج المختار",
		"reattemptDelivery": "إعادة محاولة التسليم",
		"orderAccepted": "تم قبول الطلب",
		"orderRejected": "تم رفض الطلب ",
		"productReturn": "إرجاع المنتج",
		"orderReturn": "ارجاع الطلب"
	},
	"projectIdea": {
		"post": {
			"description": "This api is use to request for new project idea and send email to admin.",
			"notes": "This api is use to request for new project idea and send email to admin."
		}
	},
	"call": {
		"response": {
			"404": "المعلومات غير موجودة."
		},
		"responseDescription": {
			"404": "المعلومات غير موجودة."
		},
		"post": {
			"description": "This API will be used to post call",
			"notes": "This API will be used to post call"
		},
		"patch": {
			"description": "This API will be used to join in call means answering a call",
			"notes": "This API will be used to join in call means answering a call"
		},
		"delete": {
			"description": "This API will be used to leave from call or reject a call",
			"notes": "This API will be used to leave from call or reject a call"
		}
	},
	"cancellationReason": {
		"get": {
			"description": "Api for Get cancellation Reason.",
			"notes": "This API allows user to get ."
		},
		"getAll": {
			"description": "Api for Get All cancellation Reason.",
			"notes": "This API allows user to get all cancellation Reason."
		},
		"post": {
			"description": "Api for Add cancellation Reason.",
			"notes": "This API allows user to add cancellation Reason."
		},
		"patch": {
			"description": "Api for Edit cancellation Reason.",
			"notes": "This API allows user to edit cancellation Reason."
		},
		"delete": {
			"description": "Api for Delete cancellation Reason.",
			"notes": "This API allows user to delete cancellation Reason."
		},
		"response": {
			"404": "سبب الالغاء عير موجود"
		},
		"responseDescription": {
			"404": "سبب الالغاء عير موجود"
		}
	},
	"bodyType": {
		"get": {
			"description": "api use for get Body Type",
			"notes": "api use for get Body Type"
		},
		"response": {
			"404": "لم يتم العثور على نوع الجسم"
		},
		"responseDescription": {
			"404": "لم يتم العثور على نوع الجسم"
		},
		"getAll": {
			"description": "Api use to get all the body type",
			"notes": "Api use to get all the body type"
		},
		"post": {
			"description": "api use for creating a body type",
			"notes": "api use for creating a body type"
		},
		"patch": {
			"description": "api use for updating body type",
			"notes": "api use for updating body type"
		},
		"delete": {
			"description": "api use for deleting bodytype",
			"notes": "api use for deleting body type"
		}
	},
	"subscriptionPlan": {
		"get": {
			"description": "احصل على خطة السائق",
			"notes": "احصل على خطة السائق"
		}
	},
	"makeModel": {
		"get": {
			"description": "api use for get make model",
			"notes": "api use for get make model"
		},
		"getAll": {
			"description": " Api use to get all the make model",
			"notes": "Api use to get all the make model"
		},
		"post": {
			"description": "api use for creating a make model",
			"notes": "api use for creating a make model"
		},
		"patch": {
			"description": "api use for updating make model",
			"notes": "api use for updating make model"
		},
		"delete": {
			"description": "api use for deleting make model",
			"notes": "api use for deleting make model"
		},
		"getModel": {
			"description": "جعل النموذج والحصول على النموذج والوصف ",
			"notes": "جعل النموذج والحصول على النموذج والوصف"
		}
	},
	"customerMake": {
		"get": {
			"description": "api use for customer Make",
			"notes": "api use for customer Make"
		},
		"getMake": {
			"description": "api use for customer Make",
			"notes": "api use for customer Make"
		}
	},
	"customerModel": {
		"getModel": {
			"description": "api use for customerModel",
			"notes": "api use for customerModel"
		}
	},
	"appBankDetails": {
		"get": {
			"response": {
				"200": "هذه هي التفاصيل المصرفية المطلوبة",
				"404": "معذرة! لم يتم العثور على تفاصيل مصرفية !"
			},
			"description": "Api to get app bank informations.",
			"notes": "This API is used to get app Bank Details."
		}
	},
	"designation": {
		"post": {
			"200": "تمت إضافة تعيين جهة الاتصال الخاصة بك بنجاح ! ",
			"description": "This API allows to add contact designation",
			"notes": "API to add contact designation"
		},
		"patch": {
			"200": "تم تحرير تعيين جهة الاتصال الخاصة بك بنجاح !",
			"404": "لم يتم العثور على تعيين جهة الاتصال !",
			"description": "This API allows to edit contact designation",
			"notes": "API to edit contact designation"
		},
		"get": {
			"200": "تم العثور على تعيين جهة الاتصال الخاصة بك ناجح !",
			"404": "لم يتم العثور على تعيينات الاتصال !",
			"description": "This API allows to get all the available contact designation",
			"notes": "API to get contact designation"
		},
		"getById": {
			"description": "This API allows to get the contact designation by designationId",
			"notes": "API to get contact designation byId"
		},
		"delete": {
			"200": "تم حذف تعيين جهة الاتصال الخاصة بك بنجاح !",
			"404": "لم يتم العثور على تعيين جهة الاتصال !",
			"description": "This API allows to delete contact designation",
			"notes": "API to get contact designation"
		}
	},
	"contactToBuyerProfile": {
		"post": {
			"200": "تمت إضافة جهة اتصال إلى ملف تعريف المشتري بنجاح",
			"description": "This API is used to add a contact to a buyer’s profile",
			"notes": "لإضافة جهة اتصال إلى ملف تعريف المشتري"
		},
		"patch": {
			"200": "تم تحرير الاتصال بملف تعريف المشتري بنجاح",
			"description": "This API is used to edit a contact to a buyer’s profile",
			"notes": "لتحرير جهة اتصال إلى ملف تعريف المشتري"
		},
		"get": {
			"200": "هذه هي جهة الاتصال المتاحة لملف تعريف المشتري",
			"description": "This API is used to get all contact to a buyer’s profile",
			"notes": "للحصول على كل اتصال بملف تعريف المشتري"
		},
		"getById": {
			"description": "This API is used to get a contact to a buyer’s profile ById",
			"notes": "للحصول على جهة اتصال بملف تعريف المشتري بواسطة المعرف"
		},
		"delete": {
			"200": "الاتصال بملف تعريف المشتري تم حذفه بنجاح.",
			"description": "This API is used to delete a contact to a buyer’s profile",
			"notes": "لحذف جهة اتصال إلى ملف تعريف المشتري"
		}
	},
	"subscriptionPayment": {
		"fields": {
			"onlinePaymentMethod": "طريقة الدفع المستخدمة للدفع بطاقة 1-Stripe.",
			"cardId": "معرف بطاقة الشريط."
		}
	},
	"returnParameter": {
		"post": {
			"200": "تمت إضافة معلمة الإرجاع بنجاح.",
			"description": "This api is used to add return parameter.",
			"notes": "لإضافة معلمة الإرجاع"
		},
		"get": {
			"200": "تم جلب معلمة الإرجاع بنجاح.",
			"404": "لم يتم العثور على معلمة الإرجاع.",
			"description": "This api is used to get return parameter.",
			"notes": "للحصول على معلمة الإرجاع"
		},
		"getById": {
			"description": "This api is used to get return parameter ById.",
			"notes": "للحصول على معلمة الإرجاع حسب المعرف"
		},
		"patch": {
			"200": "إرجاع المعلمة التي تم تحريرها بنجاح.",
			"404": "لم يتم العثور على معلمة الإرجاع.",
			"description": "This api is used to edit return parameter.",
			"notes": "لتحرير معلمة الإرجاع."
		},
		"delete": {
			"200": "إرجاع المعلمة المحذوفة بنجاح.",
			"404": "لم يتم العثور على معلمة الإرجاع.",
			"description": "This api is used to delete return parameter.",
			"notes": "لحذف معلمة الإرجاع."
		},
		"totolCount": {
			"200": 12
		}
	},
	"perCustomerCustomBilling": {
		"post": {
			"description": "اضافة الفواتير المخصصة للعميل  ",
			"notes": "اضافة الفواتير المخصصة للعميل "
		},
		"get": {
			"description": "الحصول على الفواتير المخصصة للعملاء ",
			"notes": "الحصول على الفواتير المخصصة للعملاء "
		},
		"patch": {
			"description": "تحرير الفواتير المخصصة للعميل ",
			"notes": "تحرير الفواتير المخصصة للعميل "
		},
		"response": {
			"200": "نجاح",
			"400": "%s الملف مفقود/غير صالح ",
			"404": "لم يتم العثور على البيانات مع هويتك",
			"500": "خطأ في الخادم الداخلي "
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"400": "طلب غير صحيح أثناء فقدان بعض البيانات أو عدم صلاحيتها .",
			"404": "سيحدث هذا أثناء عدم العثور على البيانات المطلوبة.",
			"500": "يحدث هذا الخطأ أثناء حدوث خطأ داخلي في الخادم ."
		}
	},
	"saveItForLater": {
		"response": {
			"404": "لم يتم العثور على المعلومات"
		},
		"responseDescription": {
			"404": "لم يتم العثور على المعلومات"
		},
		"post": {
			"description": "this api is used to move cart product to saveItToLater or saveItToLater to cart",
			"notes": "this api is used to move cart product to saveItToLater or saveItToLater to cart"
		},
		"get": {
			"response": {
				"200": "تم العثور على البيانات بنجاح",
				"404": "لم يتم العثور على المعلومات"
			},
			"description": "This api used to get saveItForLater",
			"notes": "This api used to get saveItForLater"
		},
		"delete": {
			"response": {
				"200": "تم حذف البيانات بنجاح",
				"404": "لم يتم العثور على المعلومات"
			},
			"description": "This api used to delete saveItForLater",
			"notes": "This api used to delete saveItForLater"
		}
	},
	"paypalOrder": {
		"response": {
			"200": "PayPal تم إنشاء الطلب بنجاح"
		},
		"responseDescription": {
			"200": "PayPal تم إنشاء الطلب بنجاح"
		},
		"description": "This Api is used to generate a paypal order",
		"notes": "This Api is used to generate a paypal order"
	},
	"orderPatchReturnStatus": {
		"description": "Api is use for update status of return order.",
		"notes": "Api is use for update status of return order."
	},
	"loadPreferences": {
		"response": {
			"404": "لم يتم العثور على تفضيل التحميل"
		},
		"responseDescription": {
			"404": "لم يتم العثور على تفضيل التحميل"
		},
		"get": {
			"description": "This api used for get Preference by Id",
			"notes": "This api used for get Preference by Id"
		},
		"getAll": {
			"description": "This api used for get All Preferences",
			"notes": "This api used for get All Preferences"
		},
		"post": {
			"description": "This api used for add Preferences",
			"notes": "This api used for add Preferences"
		},
		"patch": {
			"description": "This api used for edit Preferences",
			"notes": "This api used for edit Preferences"
		},
		"delete": {
			"description": "This api used for delete Preferences",
			"notes": "This api used for delete Preferences"
		}
	},
	"getPickupAddress": {
		"fields": {
			"storId": "معرف المتجر"
		},
		"description": "للحصول على عنوان الاستلام للمتجر.",
		"notes": "This api is used to get pickupAddress for store. ",
		"response": {
			"404": "لم يتم العثور على عناوين لهذا المتجر."
		}
	},
	"patchPickupAddress": {
		"response": {
			"200": "تم تحديث عنوان الاستلام بنجاح.",
			"404": "لم يتم العثور على الحزمة."
		},
		"description": "لتعديل عنوان الاستلام للطرود في طلب التسليم",
		"notes": "This api is used to edit pickupAddress for packages in deliveryOrder"
	},
	"findJob": {
		"post": {
			"description": "للحصول على حجز جديد في لوحة التحميل",
			"notes": "للحصول على حجز جديد في لوحة التحميل"
		}
	},
	"estimatedPickup": {
		"get": {
			"description": "Api for get estimated days of delivery from route.",
			"notes": "Api for get estimated days of delivery from route."
		}
	},
	"orderRouteDetails": {
		"description": "الحصول على تفاصيل طلب dc.",
		"notes": "This API is used to get dcOrder details from dcOrder ID.",
		"fields": {
			"dcOrderId": "معرف طلب dc للحصول على تفاصيل على سبيل المثال: 44301580712142350.",
			"productOrderId": "معرف طلب المنتج للحصول على تفاصيل على سبيل المثال: 44301580712142350."
		},
		"response": {
			"200": "نجاح",
			"404": "لم يتم العثور على طلب DC."
		},
		"responseDescription": {
			"200": "سيحصل هذا اثناء تنفيذ الطلب بنجاح.",
			"404": "يحدث هذا الخطأ عندما لا يتم العثور على ترتيب dc في قاعدة البيانات."
		},
		"responseFields": {}
	},
	"invoiceGenerator": {
		"post": {
			"description": "this api is use for raise credit line invoices",
			"notes": "this api is use for raise credit line invoices"
		},
		"get": {
			"description": "احصل على جميع حجوزات حد الائتمان المكتملة",
			"notes": "احصل على جميع حجوزات حد الائتمان المكتملة"
		},
		"patch": {
			"description": "this api for update invoice payment details",
			"notes": "this api for update invoice payment details"
		}
	},
	"respondToRequest": {
		"post": {
			"description": "This API allows user to post booking Response.",
			"notes": "This API allows user to post booking Response."
		}
	},
	"allOrderPaymentLogs": {
		"get": {
			"description": "الحصول على وصف لجميع سجلات دفع الطلبات",
			"notes": "جميع سجلات دفع الطلبات تحصل على ملاحظات "
		},
		"patch": {
			"description": "الحصول على وصف لجميع سجلات دفع الطلبات",
			"notes": "جميع سجلات دفع الطلبات تحصل على ملاحظات"
		}
	}
}